[
    {
        "id": "cbd68ba9caa96a3d",
        "type": "tab",
        "label": "Automation",
        "disabled": false,
        "info": "### Time Based automation\n\n#### Configuration\n\nThis flow contains a `function` node that uses the [suncalc](https://github.com/mourner/suncalc) package and relies on `LATITUDE` and `LONGITUDE` environment variables to specify the geographic coordinates used in determining sunrise and sunset.\n\n> _Geographic coordinates are an example of sensitive personal information that should generally be kept out of flows that might be shared as examples in a forum, pushed to a public source control repository etc._\n\nYou can specify environment variables for use in your flows in a number of ways, depending on your preferences and your overall Node-RED configuration. For most \"mainstream\" scenarios, the simplest way would be to add them to the _~/.node-red/environment_ file in the home directory of the user as whom the Node-RED service is running.\n\n#### Time of Day\n\nThe `link out` node named _asdf_ is where time-based automation flows should start, e.g. to adjust lighting, window coverings, HVAC settings etc. for different times of day:\n\n| `msg.payload` | Descrption                                                   |\n|---------------|--------------------------------------------------------------|\n| `morning`     | Sunrise to _offset_ hours after sunrise                      |\n| `midday`      | _Offset_ hours after sunrise to _offset_ hours before sunset |\n| `afternoon`   | _Offset_ hours before sunset to sunset                       |\n| `evening`     | Sunset to _bedtime_                                          |\n| `night`       | _Bedtime_ to sunrise                                         |\n\n_Offset_ is one third of the number of hours between sunrise and sunset.\n\n_Bedtime_ is generated each day to occur at the later of:\n\n- 10:00PM (22:00), plus or minus a randomly generated 30 minute offset\n- a randomly generated time, 30 to 60 minutes after sunset\n\n> _Five distinct times of day may seem excessive, but has proven necessary in a number of real-world scenarios. For example, the distinctions between `morning`, `midday` and `afternoon` are invaluable for homes with automated coverings over both East- and West-facing windows. In addition, randomizing `bedtime` can provide a modest degree of \"simulated presence\" to discourage potential burglars._\n\n#### Theme\n\nIn addition to the time-of-day specified by `msg.payload`, as described above, automation flows can also assume that `global.theme` will have been set to a value indicating any special occasions that might be effect:\n\n| `global.theme` | Description         |\n|----------------|---------------------|\n| `tribal`       | July 1 - 4          |\n| `spooky`       | Any day in October  |\n| `jolly`        | Any day in December |\n| `standard`     | Any other day       |",
        "env": []
    },
    {
        "id": "c7141ffb22d64190",
        "type": "tab",
        "label": "Hue",
        "disabled": false,
        "info": ""
    },
    {
        "id": "1cf0490e7de2f93d",
        "type": "tab",
        "label": "PowerView",
        "disabled": false,
        "info": "",
        "env": [
            {
                "name": "ADDRESS",
                "value": "POWERVIEW_ADDRESS",
                "type": "env"
            }
        ]
    },
    {
        "id": "e44149a93fbe9b1b",
        "type": "tab",
        "label": "Lighting",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "6e3ca82457d27245",
        "type": "tab",
        "label": "Messaging",
        "disabled": false,
        "info": ""
    },
    {
        "id": "b12fd38c090c51f2",
        "type": "tab",
        "label": "Monitoring",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "997764cb1253a223",
        "type": "tab",
        "label": "WebSockets",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "984bed4cccaab194",
        "type": "tab",
        "label": "Ground Floor Dashboard",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "1e9ddfd50242cb2a",
        "type": "tab",
        "label": "Basement Dashboard",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "5785c8d9f39df67e",
        "type": "subflow",
        "name": "Send to Hue Bridge",
        "info": "# Overview\n\nSend a message to the API (version 2) on a given Hue Bridge.\n\nSee <https://developers.meethue.com/develop/hue-api-v2/> for details.\n\n_**Note:** the intent is for this subflow to be used for_ every _message sent to a given Hue bridge so as to enforce the rate limits described in the Hue API documentation._\n\n# Configuration\n\n| Environment Variable | Description                         |\n|----------------------|-------------------------------------|\n| `ADDRESS`            | Bridge's IP address                 |\n| `KEY`                | Client access token for the message |\n\n# Input\n\n| Message Property | Description                                                                |\n|------------------|----------------------------------------------------------------------------|\n| `msg.topic`      | API URI, e.g. `resource`, `room/0ca8f049-7ac9-4872-8069-4770834e4f11` etc. |\n| `msg.payload`    | Request body, if any                                                       |\n| `msg.method`     | HTTP request method, e.g. `GET`, `PUT` etc                                 |\n\n# Outputs\n\nIf successful, the HTTP response will be sent as a parsed JSON object in `msg.payload` from output 1.\n\nA standard Node-RED error message will be sent on output 2 if the `http request` node throws an exception.",
        "category": "hue",
        "in": [
            {
                "x": 60,
                "y": 60,
                "wires": [
                    {
                        "id": "c9c806d81ab63ac4"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 620,
                "y": 60,
                "wires": [
                    {
                        "id": "20ac42d7649c260a",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "ADDRESS",
                "type": "env",
                "value": "ADDRESS"
            },
            {
                "name": "KEY",
                "type": "env",
                "value": "KEY"
            }
        ],
        "meta": {
            "module": "@parasaurolophus/node-red-send-to-hue-bridge",
            "type": "send-to-hue-bridge",
            "version": "1.0.0",
            "author": "parasaurolophus <apps@rader.us>",
            "desc": "Send a command to the Hue Bridge API",
            "keywords": "philips,hue,http",
            "license": "MIT"
        },
        "color": "#AA77AA",
        "icon": "font-awesome/fa-lightbulb-o",
        "status": {
            "x": 620,
            "y": 140,
            "wires": [
                {
                    "id": "1e35b6e766e6b3d1",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "75bc72a16c4da2c8",
        "type": "subflow",
        "name": "Create Hue Application Key",
        "info": "# Overview\n\nInvoke the Hue Bridge API to create a client access token.\n\n_**N.B.:** Invoke this subflow within 30 seconds of pressing the button on top of the bridge. Watch the debug console output to see the response. If successful, you will see the generated key among the response payload's properties._\n\nSee <https://developers.meethue.com/develop/hue-api-v2/getting-started/> for details.\n\n# Configuration\n\n| Environment Variable | Description                                    |\n|----------------------|------------------------------------------------|\n|`ADDRESS`             | Bridge's IP address                            |\n| `USERNAME`           | \"User name\" for which a key is being generated |\n\n# Input\n\nIncoming message triggers HTTP request but is otherwise ignored.\n\n# Output\n\nThe HTTP response will be sent as a parsed JSON object. If successful, look for the value of the `msg.payload.success.username` property in the output. That is the string you should use as the access token header in all subsequent Hue Bridge API request messages.",
        "category": "hue",
        "in": [
            {
                "x": 40,
                "y": 40,
                "wires": [
                    {
                        "id": "7316ae1eef4c6295"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 440,
                "y": 40,
                "wires": [
                    {
                        "id": "e4718ecfdb248cc7",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "ADDRESS",
                "type": "env",
                "value": "ADDRESS"
            },
            {
                "name": "USERNAME",
                "type": "env",
                "value": "USERNAME"
            }
        ],
        "meta": {
            "module": "@parasaurolophus/node-red-create-hue-application-key",
            "type": "create-hue-application-key",
            "version": "1.0.0",
            "author": "parasaurolophus <apps@rader.us>",
            "desc": "Invoke the Hue Bridge API for registering a client",
            "keywords": "philips,hue,http",
            "license": "MIT"
        },
        "color": "#AA77AA",
        "icon": "font-awesome/fa-lightbulb-o",
        "status": {
            "x": 440,
            "y": 100,
            "wires": [
                {
                    "id": "64ad1b43047cb836",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "9c4e4702e4660adf",
        "type": "subflow",
        "name": "Set PowerView Scene",
        "info": "# Overview\n\nUse the _Hunter Douglas PowerView_&reg; hub API to activate a given window shade scene.\n\nSee <https://motorisation.hde.nl/hd/powerview/general-guides/API/> for details.\n\n# Configuration\n\nThe `ADDRESS` environment variable must be configured with the IP address of the hub.\n\n# Input\n\n`msg.payload` containing the id of the scene to activate.\n\nAll other input message properties are ignored by the subflow but care should be taken not to pass any through that could affect the behavior of a `http request` node in unintended ways.\n\n# Output\n\nHTTP response from the hub.\n\n# Side Effects\n\nIf successful, the window shades will move to the settings defined by the specified scene as configured using the _PowerView_&reg; mobile app.",
        "category": "powerview",
        "in": [
            {
                "x": 60,
                "y": 60,
                "wires": [
                    {
                        "id": "dcd553804e687131"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 600,
                "y": 60,
                "wires": [
                    {
                        "id": "8dc3bcf508fc6c98",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "ADDRESS",
                "type": "env",
                "value": "ADDRESS"
            }
        ],
        "meta": {
            "module": "@parasaurolophus/node-red-set-powerview-scene",
            "type": "set-powerview-scene",
            "version": "1.0.0",
            "author": "parasaurolophus <apps@rader.us>",
            "desc": "Activate a PowerView scene",
            "keywords": "hunter douglas,powerview",
            "license": "MIT"
        },
        "color": "#C0DEED",
        "icon": "font-awesome/fa-align-justify",
        "status": {
            "x": 600,
            "y": 140,
            "wires": [
                {
                    "id": "728ab503eb1eb941",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "4920eed654c67f8d",
        "type": "subflow",
        "name": "Get PowerView Metadata",
        "info": "",
        "category": "powerview",
        "in": [
            {
                "x": 60,
                "y": 100,
                "wires": [
                    {
                        "id": "465f820637e0f695"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 460,
                "y": 60,
                "wires": [
                    {
                        "id": "e62fe5c7c72b90ee",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "ADDRESS",
                "type": "env",
                "value": "ADDRESS"
            }
        ],
        "meta": {
            "module": "@parasaurolophus/node-red-get-powerview-metadata",
            "type": "get-powerview-metadata",
            "version": "1.0.0",
            "author": "parasaurolophus <apps@rader.us>",
            "keywords": "powerview,hunter douglas",
            "license": "MIT"
        },
        "color": "#C0DEED",
        "icon": "font-awesome/fa-align-justify",
        "status": {
            "x": 660,
            "y": 180,
            "wires": [
                {
                    "id": "014121091f945d16",
                    "port": 0
                },
                {
                    "id": "35c708b92ea8024b",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "c4207c9fe61a900e",
        "type": "subflow",
        "name": "Monitored Event",
        "info": "Handle MQTT messages for topics that match the value of the `TOPIC` environment variable. Such topics are expected to be of the form `cpu/+/attribute`, for some monitored attribute such as `temperature`, `voltage` etc. The second, wildcard elemnt is expected to be the name of the host that sent the particular message being handled. Such messages are cached in the context of a function node in this subflow as an object whose keys are the host names. The value for each host is an object whose key is the name of the attribute and whose value is the value for the most recently received message for that attribute from that host.\n\nFor example, assuming that `${TOPIC}` is configured to be `cpu/+/temperature`, the following sequence of messages:\n\n    cpu/host1/temperature : 31\n    cpu/host2/temperature : 55\n    cpu/host3/temperature : 49\n\nwould result in the cached state becoming:\n\n    {\n        host1: {\n            temperature: 31\n        },\n        host2: {\n            temperature: 55\n        },\n        host5: {\n            temperature: 49\n        }\n    }\n\nIf a subsequent message were received:\n\n    cpu/host2/temperature : 56\n\nthe cached state would be updated to:\n\n    {\n        host1: {\n            temperature: 31\n        },\n        host2: {\n            temperature: 56\n        },\n        host5: {\n            temperature: 49\n        }\n    }\n\n...and so on.\n\nThe subflow has two outputs:\n\n1. A HTML `<table>` representing the cached state for all hosts after updating it upon the receipt of each message, presumably for display using a dashboard _template_ node.\n\n2. The raw event for subsequent processing, e.g. taking action if some CPU overheats.\n\nThe `<table>` emitted for the updated state descibed above would be something like (_extra whitespace and comments inserted here for readability_):\n\n    <table>\n      <!-- optional first row, included if ${HEADER} is true -->\n      <tr>\n        <th>host</th>\n        <th>temperature</th>\n      </tr>\n      <!-- assumes ${UNIT} is set to 'C' -->\n      <tr>\n        <td>host1</td>\n        <td>31C</td>\n      </tr>\n      <tr>\n        <td>host2</td>\n        <td>56C</td>\n      </tr>\n      <tr>\n        <td>host3</td>\n        <td>49C</td>\n      </tr>\n    </table>\n\nAs noted in the HTML comments, the formatting of the `<table>` can be tweaked by two additional environment variables:\n\n- The value of `UNIT`, which defaults to the empty string, will be appended to each value in the second column.\n\n- The first, `<th>`, row will only be included in the HTML output if the value of `HEADER` is `true`.",
        "category": "waubesa",
        "in": [],
        "out": [
            {
                "x": 720,
                "y": 100,
                "wires": [
                    {
                        "id": "46fb2d69cd82b25c",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "TOPIC",
                "type": "str",
                "value": ""
            }
        ],
        "meta": {},
        "color": "#E7E7AE",
        "icon": "node-red/status.svg",
        "status": {
            "x": 720,
            "y": 200,
            "wires": [
                {
                    "id": "e81b7e6a74a922a1",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "4e89e7c952d56c09",
        "type": "subflow",
        "name": "Hue to MQTT",
        "info": "# Overview\n\nThis subflow:\n\n- Caches the state of Philips Hue devices in flow context using the response  to an invocation of the `/resource` end-point of the [Philips Hue Bridge V2 API](https://developers.meethue.com/develop/hue-api-v2/api-reference/#resource).\n\n- Outputs a stream of individual event messages as the cached devices' states change by subscribing to [SSE messages](https://developers.meethue.com/develop/hue-api-v2/core-concepts/#events).\n\nEach event message will have appropriate MQTT topic, QoS and retain properties set in addition to the payload sent by the Hue bridge.\n\n_**Note:** the `switch` node named \"filter resources\" in this subflow is used to restrict the number of messages processed at startup to only those types of resources likely to be of interest to Node-RED based automation. This means that over time you will receive SSE messages for resources whose state did not appear in the initial output from this subflow. If you wish for 100% consistency across all resource types, remove the \"filter resources\" node from between the two `split` nodes, but be warned that will cause a much larger volume of MQTT messaging each time your flows are restarted._\n\n# Dependency\n\n[node-red-contrib-sse-client](https://flows.nodered.org/node/node-red-contrib-sse-client)\n\n# Configuration\n\nA separate subflow instance can be created for each Hue bridge by using the following configuration variables:\n\n| Environment Variable | Description                                                             |\n|----------------------|-------------------------------------------------------------------------|\n| `ADDRESS`            | IP address of the Hue bridge                                            |\n| `KEY`                | \"Client key\" for the Hue bridge API<sup>*</sup>                         |\n| `TOPIC`              | String to prepend to each `msg.topic` in the output, as described below |\n\n<sup>*</sup>_See <https://developers.meethue.com/develop/hue-api-v2/getting-started/> for details. Use the_ Create Hue Access Token _subflow to obtain such a key._\n\n# Input\n\nResponse from a successful call to the `/resource` end-point of the [Philips Hue Bridge V2 API](https://developers.meethue.com/develop/hue-api-v2/api-reference/#resource) in `msg.payload`.\n\n# Output\n\nAn ongoing sequence of message objects representing the state of each device as reported by [SSE](https://developers.meethue.com/develop/hue-api-v2/core-concepts/#events). Each message will have the following properties set:\n\n| Property | Value |\n|-|-|\n| `msg.topic` | `${TOPIC}/<type>/<id>` where `<type>` and `<id>` are the identifiers for a given \"resource\" as reported by the Hue bridge API. |\n| `msg.qos` | 2 |\n| `msg.retain` | `true` |\n| `msg.payload` | The current state of the given \"resource\"<sup>**</sup> |\n\n<sup>**</sup>_Note that each output message will contain a combined set of properties for each \"resource\" received across multiple API responses and SSE messages. This mitigates one of the many issues with the design of the Philips Hue API. The cached state is maintained in flow context at runtime and as retained MQTT messages across reboots._",
        "category": "hue",
        "in": [
            {
                "x": 60,
                "y": 220,
                "wires": [
                    {
                        "id": "98d7f50f7db89d4d"
                    },
                    {
                        "id": "42539f9217e51fbd"
                    },
                    {
                        "id": "630e5fb465ec65c9"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1170,
                "y": 220,
                "wires": [
                    {
                        "id": "7972bbcf134f786b",
                        "port": 0
                    },
                    {
                        "id": "f3d6eb631a33249c",
                        "port": 0
                    },
                    {
                        "id": "1bf87f4377d87af1",
                        "port": 0
                    }
                ]
            },
            {
                "x": 720,
                "y": 60,
                "wires": [
                    {
                        "id": "630e5fb465ec65c9",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "ADDRESS",
                "type": "env",
                "value": "ADDRESS"
            },
            {
                "name": "KEY",
                "type": "env",
                "value": "KEY"
            },
            {
                "name": "TOPIC",
                "type": "env",
                "value": "TOPIC"
            }
        ],
        "meta": {
            "module": "@parasaurolophus/node-red-hue-to-mqtt",
            "type": "hue-to-mqtt",
            "version": "1.0.0",
            "author": "parasaurolophus <apps@rader.us>",
            "desc": "Forward SSE events arising from the Hue Bridge API to MQTT",
            "keywords": "philips,hue,sse",
            "license": "MIT"
        },
        "color": "#AA77AA",
        "outputLabels": [
            "mqtt",
            "metadata",
            "options"
        ],
        "icon": "font-awesome/fa-lightbulb-o",
        "status": {
            "x": 700,
            "y": 420,
            "wires": [
                {
                    "id": "35fad88b119f8f36",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "de620fed3bdb7aa9",
        "type": "subflow",
        "name": "Server-Side Events",
        "info": "",
        "category": "waubesa",
        "in": [
            {
                "x": 680,
                "y": 140,
                "wires": [
                    {
                        "id": "eef1022d50fc9776"
                    },
                    {
                        "id": "df7f3018ef95e2a2"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1240,
                "y": 100,
                "wires": [
                    {
                        "id": "cdd12e98966ee7c4",
                        "port": 0
                    }
                ]
            },
            {
                "x": 1260,
                "y": 220,
                "wires": [
                    {
                        "id": "cdd12e98966ee7c4",
                        "port": 1
                    }
                ]
            },
            {
                "x": 1260,
                "y": 280,
                "wires": [
                    {
                        "id": "cdd12e98966ee7c4",
                        "port": 2
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "TIMEOUT",
                "type": "num",
                "value": "60000"
            }
        ],
        "meta": {
            "module": "@parasaurolophus/node-red-server-side-events",
            "type": "server-side-events",
            "version": "1.0.0",
            "author": "parasaurolophus <apps@rader.us>",
            "desc": "Add watchdog timer to @parasaurolophus/node-red-eventsource",
            "keywords": "sse,eventsource",
            "license": "MIT"
        },
        "color": "#E7E7AE",
        "outputLabels": [
            "sse",
            "onopen",
            "onerror"
        ],
        "icon": "node-red/white-globe.svg",
        "status": {
            "x": 220,
            "y": 340,
            "wires": [
                {
                    "id": "d901234fd1fce55c",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "a34d4eb04cf45884",
        "type": "subflow",
        "name": "Parse Hue Resources",
        "info": "",
        "category": "hue",
        "in": [
            {
                "x": 60,
                "y": 60,
                "wires": [
                    {
                        "id": "6b8a0e371954f465"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 880,
                "y": 60,
                "wires": [
                    {
                        "id": "2d8a3e52f4b83d16",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {
            "module": "@parasaurolophus/node-red-parse-hue-resources",
            "type": "parse-hue-resources",
            "version": "1.0.0",
            "author": "parasaurolophus <apps@rader.us>",
            "desc": "Parse the response to a \"/resource\" request from the Hue API V2",
            "keywords": "philips,hue.http",
            "license": "MIT"
        },
        "color": "#AA77AA",
        "icon": "font-awesome/fa-lightbulb-o"
    },
    {
        "id": "4b1f9e8c23fa098d",
        "type": "subflow",
        "name": "Parse Hue Event",
        "info": "",
        "category": "hue",
        "in": [
            {
                "x": 60,
                "y": 100,
                "wires": [
                    {
                        "id": "11642f950d52a63f"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 900,
                "y": 60,
                "wires": [
                    {
                        "id": "c4f2d5d0acdf4cc1",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {
            "module": "@parasaurolophus/node-red-parse-hue-event",
            "type": "parse-hue-event",
            "version": "1.0.0",
            "author": "parasaurolophus <apps@rader.us>",
            "desc": "Parse a raw Philips Hue bridge server-sent event",
            "keywords": "philips,hue,sse",
            "license": "MIT"
        },
        "color": "#AA77AA",
        "inputLabels": [
            "raw sse"
        ],
        "outputLabels": [
            "hue event"
        ],
        "icon": "font-awesome/fa-lightbulb-o",
        "status": {
            "x": 1040,
            "y": 140,
            "wires": [
                {
                    "id": "612b03cff3e03da9",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "658f7950e449a6aa",
        "type": "subflow",
        "name": "Hue SSE Status",
        "info": "",
        "category": "hue",
        "in": [],
        "out": [
            {
                "x": 390,
                "y": 60,
                "wires": [
                    {
                        "id": "11ead2b503a6826b",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "TOPIC",
                "type": "str",
                "value": ""
            }
        ],
        "meta": {
            "module": "@parasaurolophus/node-red-hue-sse-status",
            "type": "hue-sse-status",
            "version": "1.0.0",
            "author": "parasuarolophus <apps@rader.us>",
            "desc": "Emit diagnostic information about a connection to the SSE service on a Hue Bridge",
            "keywords": "philips,hue,sse",
            "license": "MIT"
        },
        "color": "#AA77AA",
        "outputLabels": [
            "readyState",
            "connected count"
        ],
        "icon": "font-awesome/fa-lightbulb-o",
        "status": {
            "x": 520,
            "y": 140,
            "wires": [
                {
                    "id": "64a29e093d39ddca",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "9601cbf2386d897b",
        "type": "subflow",
        "name": "Count Messages",
        "info": "",
        "category": "waubesa",
        "in": [],
        "out": [
            {
                "x": 340,
                "y": 60,
                "wires": [
                    {
                        "id": "29db695f97cc5757",
                        "port": 0
                    }
                ]
            },
            {
                "x": 340,
                "y": 140,
                "wires": [
                    {
                        "id": "29db695f97cc5757",
                        "port": 1
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "TOPIC",
                "type": "str",
                "value": ""
            }
        ],
        "meta": {
            "module": "@parasaurolophus/node-red-count-messages",
            "type": "count-messages",
            "version": "1.0.0",
            "author": "parasaurolophus <apps@rader.us>",
            "desc": "Count the number of MQTT messages received on a specfied topic",
            "keywords": "mqtt",
            "license": "MIT"
        },
        "color": "#DDAA99",
        "status": {
            "x": 340,
            "y": 220,
            "wires": [
                {
                    "id": "3f4427884112393c",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "60301f96c2ad2e7c",
        "type": "subflow",
        "name": "Find Shade Scene",
        "info": "",
        "category": "powerview",
        "in": [
            {
                "x": 60,
                "y": 60,
                "wires": [
                    {
                        "id": "e38879a57c5ccc08"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 260,
                "y": 60,
                "wires": [
                    {
                        "id": "e38879a57c5ccc08",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "NAME",
                "type": "str",
                "value": ""
            }
        ],
        "meta": {
            "module": "@parasaurolophus/node-red-find-shade-scene",
            "type": "find-shade-scene",
            "version": "1.0.0",
            "author": "parasaurolophus <apps@rader.us>",
            "desc": "Look up the PowerView scene id in flow context given its scene name",
            "keywords": "hunter douglas,powerview",
            "license": "MIT"
        },
        "color": "#C0DEED",
        "icon": "font-awesome/fa-align-justify",
        "status": {
            "x": 260,
            "y": 140,
            "wires": [
                {
                    "id": "389a164ec26435b2",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "be201d7a24b331c5",
        "type": "subflow",
        "name": "As Time",
        "info": "",
        "category": "waubesa",
        "in": [],
        "out": [
            {
                "x": 440,
                "y": 40,
                "wires": [
                    {
                        "id": "a96e0b1ad753faa2",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "TOPIC",
                "type": "str",
                "value": ""
            }
        ],
        "meta": {
            "module": "@parasaurolophus/node-red-as-time",
            "type": "as-time",
            "version": "1.0.0",
            "author": "parasaurolophus <apps@rader.us>",
            "desc": "Format the payload as a local time string",
            "keywords": "utility,automation",
            "license": "MIT"
        },
        "color": "#DDAA99",
        "status": {
            "x": 620,
            "y": 120,
            "wires": [
                {
                    "id": "644bea96363a82cd",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "97864671c1ced479",
        "type": "subflow",
        "name": "Process Hue Metadata",
        "info": "",
        "category": "waubesa",
        "in": [
            {
                "x": 60,
                "y": 100,
                "wires": [
                    {
                        "id": "2ba0e995c3cf4cd0"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 390,
                "y": 60,
                "wires": [
                    {
                        "id": "2ba0e995c3cf4cd0",
                        "port": 0
                    }
                ]
            },
            {
                "x": 400,
                "y": 140,
                "wires": [
                    {
                        "id": "2ba0e995c3cf4cd0",
                        "port": 1
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "GLOBAL",
                "type": "str",
                "value": ""
            }
        ],
        "meta": {},
        "color": "#DDAA99",
        "outputLabels": [
            "groups",
            "scenes"
        ]
    },
    {
        "id": "648d285142674988",
        "type": "subflow",
        "name": "Hue Group Options",
        "info": "",
        "category": "waubesa",
        "in": [
            {
                "x": 60,
                "y": 80,
                "wires": [
                    {
                        "id": "75b9e19e2accb4d5"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 300,
                "y": 80,
                "wires": [
                    {
                        "id": "75b9e19e2accb4d5",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "cccd3d3ae4af3207",
        "type": "group",
        "z": "1cf0490e7de2f93d",
        "name": "Fetch the PowerView window shade room and scene metadata from the Chez Nous Shades hub",
        "style": {
            "stroke": "none",
            "fill": "#000000",
            "fill-opacity": "0.1",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "1cee4f351bd59563",
            "69a6db45ef9f6fdf",
            "4a774d5487ebaf6f",
            "42529821fe2b55cd",
            "837774c682b93af9",
            "9d0fb43b1d0b583f",
            "18b035d175d78813"
        ],
        "x": 114,
        "y": 519,
        "w": 632,
        "h": 242
    },
    {
        "id": "87285e6bf01cff03",
        "type": "group",
        "z": "1cf0490e7de2f93d",
        "name": "Activate PowerView scene",
        "style": {
            "stroke": "none",
            "fill": "#000000",
            "fill-opacity": "0.1",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "2f6cc09457939ce2",
            "7173aa38c9fa93dc",
            "618e79a58ab8143a"
        ],
        "x": 114,
        "y": 19,
        "w": 362,
        "h": 82
    },
    {
        "id": "e49c9571ddd5102f",
        "type": "group",
        "z": "6e3ca82457d27245",
        "name": "Send to MQTT broker",
        "style": {
            "stroke": "none",
            "fill": "#000000",
            "fill-opacity": "0.1",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "f5c7a7580984d067",
            "11b2638982da0e64",
            "dd7609e91ad64f63",
            "8145a71a1f26c616",
            "1c6a7f9ae824db96",
            "6db5c2fcb5fd08e3",
            "461d49b47e87e402",
            "5ea9e057dd830d9e",
            "5adbc418ab39d29a"
        ],
        "x": 114,
        "y": 39
    },
    {
        "id": "ca14f3586a7c5f24",
        "type": "group",
        "z": "c7141ffb22d64190",
        "name": "Basement Hue",
        "style": {
            "label": true,
            "stroke": "#000000",
            "fill-opacity": "0.05",
            "color": "#000000",
            "stroke-opacity": "0.1"
        },
        "nodes": [
            "9c46129d149ab201",
            "648ad874a33c7973",
            "0fc22be05cfc5241"
        ],
        "x": 28,
        "y": 413,
        "w": 804,
        "h": 374
    },
    {
        "id": "46f2fb3ee016fe23",
        "type": "group",
        "z": "c7141ffb22d64190",
        "name": "Chez Nous Main",
        "style": {
            "fill-opacity": "0.05",
            "label": true,
            "color": "#000000",
            "stroke": "#000000",
            "stroke-opacity": "0.1"
        },
        "nodes": [
            "70e9b8db12799d18",
            "290b83ef8e01ae0f",
            "665df9d682462b5e"
        ],
        "x": 28,
        "y": 13,
        "w": 804,
        "h": 374
    },
    {
        "id": "6c7bbad3f1eae3bb",
        "type": "group",
        "z": "e44149a93fbe9b1b",
        "name": "Main Floor (Hue Zone)",
        "style": {
            "label": true,
            "stroke": "#000000",
            "fill-opacity": "0.05",
            "color": "#000000",
            "stroke-opacity": "0.1"
        },
        "nodes": [
            "1ce03cecd5db8bc6",
            "3483ce20c1996e6c",
            "e1fa765ec5a5ebd7"
        ],
        "x": 88,
        "y": 13,
        "w": 524,
        "h": 334
    },
    {
        "id": "e29b5646cac97198",
        "type": "group",
        "z": "e44149a93fbe9b1b",
        "name": "Main Bathroom (Hue Room)",
        "style": {
            "label": true,
            "stroke": "#000000",
            "fill-opacity": "0.05",
            "color": "#000000",
            "stroke-opacity": "0.1"
        },
        "nodes": [
            "00ad2b71a9c29a21",
            "513bc529c9c10fa0"
        ],
        "x": 88,
        "y": 373,
        "w": 524,
        "h": 234
    },
    {
        "id": "0770b0ba393f379d",
        "type": "group",
        "z": "1cf0490e7de2f93d",
        "name": "close all shades",
        "style": {
            "stroke": "none",
            "fill": "#000000",
            "fill-opacity": "0.1",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "71f42f61777d49d9",
            "af010737ecd1f8d6",
            "edec482fa879717d",
            "5db5ebf66b1cf16b",
            "516be0577e70437c"
        ],
        "x": 114,
        "y": 119,
        "w": 1092,
        "h": 82
    },
    {
        "id": "746733f8c81b5ccd",
        "type": "group",
        "z": "1cf0490e7de2f93d",
        "name": "open all shades",
        "style": {
            "stroke": "none",
            "fill": "#000000",
            "fill-opacity": "0.1",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "4d9c62d6c2145813",
            "1b984be8838e6815",
            "1b49d418ac1d553d",
            "18709dea4106ee7e",
            "7bc062570484d12c"
        ],
        "x": 114,
        "y": 219,
        "w": 1092,
        "h": 82
    },
    {
        "id": "e961376bbef01556",
        "type": "group",
        "z": "1cf0490e7de2f93d",
        "name": "open east shades, close west shades",
        "style": {
            "stroke": "none",
            "fill": "#000000",
            "fill-opacity": "0.1",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "3fa2af1c1f32f8ee",
            "407f68edfd369a25",
            "59f2f3b92b79087e",
            "3849c71599f44bc7",
            "bdce740848b412c8"
        ],
        "x": 114,
        "y": 319,
        "w": 1092,
        "h": 82
    },
    {
        "id": "56e03f40c1727182",
        "type": "group",
        "z": "1cf0490e7de2f93d",
        "name": "close east shades, open west shades",
        "style": {
            "stroke": "none",
            "fill": "#000000",
            "fill-opacity": "0.1",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "cab89ebfeca22623",
            "c906095c1f350eda",
            "e8a3ad681677753f",
            "5cdf5a1ca6546850",
            "b56bca504084bf91"
        ],
        "x": 114,
        "y": 419,
        "w": 1092,
        "h": 82
    },
    {
        "id": "d23ba68654f3c055",
        "type": "group",
        "z": "e44149a93fbe9b1b",
        "name": "Yard (Hue Room)",
        "style": {
            "stroke": "#000000",
            "fill-opacity": "0.05",
            "label": true,
            "color": "#000000",
            "stroke-opacity": "0.1"
        },
        "nodes": [
            "26622bde8cf9b262",
            "c083702f726a3c76",
            "1f51b2e96d97963e",
            "73df20e8ccdbf56c",
            "f6597e2f37dd2636"
        ],
        "x": 708,
        "y": 13,
        "w": 524,
        "h": 534
    },
    {
        "id": "98cf3b8910bc4f22",
        "type": "group",
        "z": "cbd68ba9caa96a3d",
        "name": "Trigger automation",
        "style": {
            "stroke": "none",
            "fill": "#000000",
            "fill-opacity": "0.1",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "485df563c6545698",
            "98e07825f41a09a2",
            "1b5ab2bf7ea37b3b",
            "21af7493f52944f5",
            "1e6ace60764fec35",
            "83d6d8f537b0c172",
            "08157854eff23df6",
            "60f145bb0461c216",
            "784c9929fe789981",
            "6272a0d1ddf8807b",
            "2a94995efda1937e"
        ],
        "x": 34,
        "y": 219,
        "w": 982,
        "h": 262
    },
    {
        "id": "1f88f9981ae4ba5f",
        "type": "group",
        "z": "cbd68ba9caa96a3d",
        "name": "Lighting automation",
        "style": {
            "stroke": "none",
            "fill": "#000000",
            "fill-opacity": "0.1",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "5950aa6c0df32eb2",
            "4ed8bcf218333395",
            "b29a7ab55a3476e5",
            "6a4e3c8d5c47d1b7",
            "e0a9d45fbfcb3532",
            "758cfea08b622975",
            "b8723d53ddad808a",
            "0156a364439561a8",
            "c60a157e32809b1f",
            "805a96f9c1561bcd"
        ],
        "x": 534,
        "y": 499,
        "w": 482,
        "h": 242
    },
    {
        "id": "fde389905b8f6545",
        "type": "group",
        "z": "cbd68ba9caa96a3d",
        "name": "Window shade automation",
        "style": {
            "stroke": "none",
            "fill": "#000000",
            "fill-opacity": "0.1",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "ba94cc02344092b6",
            "5ec89823b4e8d3aa",
            "cb25d319d7126480",
            "c633c043693d29f4",
            "fc34e1d6c55a3985",
            "0b72197569340d63",
            "aafc4027ba2b619f"
        ],
        "x": 34,
        "y": 499,
        "w": 302,
        "h": 242
    },
    {
        "id": "8a031cfeade40a06",
        "type": "group",
        "z": "cbd68ba9caa96a3d",
        "name": "Fire timer events",
        "style": {
            "stroke": "none",
            "fill": "#000000",
            "fill-opacity": "0.1",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "b2c19560f9da088a",
            "a0c7d328b5287989",
            "8c6c3c20f5958599",
            "a0b61336a93a4089",
            "c9d02aeed7d0407f",
            "d534f07cf7c1eb0b",
            "b709b48ce2961f8e",
            "47875e1be48bbf82",
            "ff64f46de7793f7b"
        ],
        "x": 34,
        "y": 19,
        "w": 962,
        "h": 182
    },
    {
        "id": "b438e0cbd64ef6ce",
        "type": "group",
        "z": "b12fd38c090c51f2",
        "name": "Display a chart of daytime sun positions on a given date",
        "style": {
            "stroke": "none",
            "fill": "#000000",
            "fill-opacity": "0.1",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "c27168b168847790",
            "3a39c550369bac31",
            "15ce56cf1449ce52",
            "f33b94d2cc59c348",
            "625b9718a13e0340",
            "f72b11239792afcf",
            "4dd293c16815dce3",
            "40aa6d57e66c9314",
            "8549e51620377f66",
            "8fe5e01fe99f5026",
            "e7bc056a5ca25bc5"
        ],
        "x": 14,
        "y": 19
    },
    {
        "id": "5cc3007bfef936f5",
        "type": "group",
        "z": "b12fd38c090c51f2",
        "name": "Monitur CPU status",
        "style": {
            "stroke": "none",
            "fill": "#000000",
            "fill-opacity": "0.1",
            "label": false
        },
        "nodes": [
            "be5ed0fec546d004",
            "08c851f506852280",
            "1c85c492c57041d7",
            "55425537c5741ec5",
            "281d03f937caa527",
            "92446033e6f8968f",
            "6eae3f85a3c030a8",
            "dea1d159dc5339ef",
            "9632e610560cfce1",
            "e08653b0e7646390"
        ],
        "x": 14,
        "y": 579
    },
    {
        "id": "8a81267cb12384d5",
        "type": "group",
        "z": "b12fd38c090c51f2",
        "name": "Monitor timer events",
        "style": {
            "label": true,
            "color": "#000000",
            "stroke": "none",
            "fill": "#000000",
            "fill-opacity": "0.1"
        },
        "nodes": [
            "3ffae20118b3f324",
            "056b4e63ec2cd405",
            "64f954fed4bbe73e",
            "4332d4706a43e2f6",
            "9e522923ebcadd47",
            "cd359e0f643d8b52",
            "6ce0fae7a630111f",
            "6fd30861ee594f7a",
            "7b3880a941748a69",
            "a6c27a31c49422e4",
            "03b32d05f0dc98c7",
            "3a0d9afd6a91a4b8",
            "119dc5e83c2a078f",
            "b403745b92a95d79",
            "c6ad3ce00565e461",
            "fb5206dc8bb107e5",
            "61c5be84a6996eee",
            "a921a5a41ab154fc"
        ],
        "x": 14,
        "y": 199
    },
    {
        "id": "0d4083787ae50482",
        "type": "group",
        "z": "b12fd38c090c51f2",
        "name": "Monitor Chez Nous Main readyState",
        "style": {
            "stroke": "none",
            "fill": "#000000",
            "fill-opacity": "0.1",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "7afdc0752b7bab93",
            "af3bef0be06cad7d",
            "e20fca5f4b3d37b9",
            "dfcbba568eef0b62"
        ],
        "x": 14,
        "y": 419
    },
    {
        "id": "c28ed42a351eb1a7",
        "type": "group",
        "z": "b12fd38c090c51f2",
        "name": "Monitor Basement Hue readyState",
        "style": {
            "stroke": "none",
            "fill": "#000000",
            "fill-opacity": "0.1",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "23c5c69fbebd0a69",
            "10298b89f745814f",
            "82355ffb0dd175e4",
            "e80f7721307a29b3"
        ],
        "x": 634,
        "y": 419
    },
    {
        "id": "f82a1f6e963f443a",
        "type": "group",
        "z": "6e3ca82457d27245",
        "name": "sun-positions CSV service",
        "style": {
            "stroke": "none",
            "fill": "#000000",
            "fill-opacity": "0.1",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "0888e9faa06fe4e5",
            "48da82dc3974c2b3",
            "a341a1a127b0fe71",
            "68ca4947dd6cf14e",
            "ccc46e9ff7a15f4e",
            "98380b5a50270d78"
        ],
        "x": 114,
        "y": 259
    },
    {
        "id": "80212e6229ce755b",
        "type": "group",
        "z": "6e3ca82457d27245",
        "name": "Periodically send stats from os module",
        "style": {
            "stroke": "none",
            "fill": "#000000",
            "fill-opacity": "0.1",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "5f86349da8f86e61",
            "de168bcd359b4aa8",
            "baa82bec436a6471"
        ],
        "x": 114,
        "y": 419
    },
    {
        "id": "3792bffcc53d7d09",
        "type": "group",
        "z": "997764cb1253a223",
        "name": "unicast request / response over websocket",
        "style": {
            "stroke": "#000000",
            "stroke-opacity": "0.1",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "60c093dadbe98d8c",
            "d26af90c07042d0b",
            "f62fd902bca5d337",
            "6cf254b5fbe8d9c1",
            "b34ce1d598cf8eb8",
            "e967994a8d994435"
        ],
        "x": 28,
        "y": 353
    },
    {
        "id": "4245d7c744b6be94",
        "type": "group",
        "z": "997764cb1253a223",
        "name": "",
        "style": {
            "stroke": "#000000",
            "stroke-opacity": "0.1",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "e7f5a72a22121c8f"
        ],
        "x": 28,
        "y": 513
    },
    {
        "id": "43456594e4cb4e24",
        "type": "group",
        "z": "997764cb1253a223",
        "name": "",
        "style": {
            "stroke": "#000000",
            "stroke-opacity": "0.1",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "12eb9a8162f223d1",
            "445d81f63806df12",
            "8fc06747717d00eb"
        ],
        "x": 28,
        "y": 193
    },
    {
        "id": "cc17bdf0cffdd1a1",
        "type": "group",
        "z": "997764cb1253a223",
        "name": "",
        "style": {
            "stroke": "#000000",
            "stroke-opacity": "0.1",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "40f2f41eed2f5540",
            "06533547fdbaa357",
            "6a70472869a0916a"
        ],
        "x": 34,
        "y": 33
    },
    {
        "id": "1ce03cecd5db8bc6",
        "type": "group",
        "z": "e44149a93fbe9b1b",
        "g": "6c7bbad3f1eae3bb",
        "name": "Turn off main floor lights group",
        "style": {
            "stroke": "none",
            "fill": "#000000",
            "fill-opacity": "0.1",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "07ccb0b07e6fada8",
            "ec1b9da9a2a0dde0",
            "33533dc0ac4ff870"
        ],
        "x": 114,
        "y": 39,
        "w": 452,
        "h": 82
    },
    {
        "id": "3483ce20c1996e6c",
        "type": "group",
        "z": "e44149a93fbe9b1b",
        "g": "6c7bbad3f1eae3bb",
        "name": "Activate main floor nightlight scene",
        "style": {
            "stroke": "none",
            "fill": "#000000",
            "fill-opacity": "0.1",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "3ed1a4d37d1548b4",
            "53509cbc2f897eb4",
            "1462dac4d5543f0a"
        ],
        "x": 114,
        "y": 139,
        "w": 472,
        "h": 82
    },
    {
        "id": "e1fa765ec5a5ebd7",
        "type": "group",
        "z": "e44149a93fbe9b1b",
        "g": "6c7bbad3f1eae3bb",
        "name": "Activate main floor sunset scene",
        "style": {
            "stroke": "none",
            "fill": "#000000",
            "fill-opacity": "0.1",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "6cae9b1ccc68cb9e",
            "8ae7ee0c87df1191",
            "76f3eb6c53a0310c"
        ],
        "x": 114,
        "y": 239,
        "w": 452,
        "h": 82
    },
    {
        "id": "70e9b8db12799d18",
        "type": "group",
        "z": "c7141ffb22d64190",
        "g": "46f2fb3ee016fe23",
        "name": "Send requests to the Hue API on the Chez Nous Main bridge",
        "style": {
            "stroke": "none",
            "fill": "#000000",
            "fill-opacity": "0.1",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "14e5342cb50f366f",
            "7df3e5fbd6e9aa8a",
            "3b5ab296575b53d4"
        ],
        "x": 54,
        "y": 139,
        "w": 385,
        "h": 82
    },
    {
        "id": "290b83ef8e01ae0f",
        "type": "group",
        "z": "c7141ffb22d64190",
        "g": "46f2fb3ee016fe23",
        "name": "Use within 30 seconds of pressing link button on Chez Nous Main bridge",
        "style": {
            "fill-opacity": "0.11",
            "label": true,
            "color": "#000000",
            "stroke": "none",
            "fill": "#000000"
        },
        "nodes": [
            "51bce99c75aa12c6",
            "f3ab10cd192709b0",
            "73a1ec5ed8ebc167"
        ],
        "x": 54,
        "y": 39,
        "w": 752,
        "h": 82
    },
    {
        "id": "665df9d682462b5e",
        "type": "group",
        "z": "c7141ffb22d64190",
        "g": "46f2fb3ee016fe23",
        "name": "Listen to events from Chez Nous Main bridge",
        "style": {
            "stroke": "none",
            "fill": "#000000",
            "fill-opacity": "0.1",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "8c9d79d2791e9b02",
            "2d0604f94ef7bff4",
            "4d2dc9a6e42d0548",
            "7d283a2fc0d30093",
            "66730b89492663ed"
        ],
        "x": 54,
        "y": 239,
        "w": 662,
        "h": 122
    },
    {
        "id": "9c46129d149ab201",
        "type": "group",
        "z": "c7141ffb22d64190",
        "g": "ca14f3586a7c5f24",
        "name": "Send requests to the Hue API on the Basement Hue bridge",
        "style": {
            "stroke": "none",
            "fill": "#000000",
            "fill-opacity": "0.1",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "df7392117105107f",
            "df79272de1bce7c1",
            "0ceb59ac89fb79b7"
        ],
        "x": 54,
        "y": 539,
        "w": 375,
        "h": 82
    },
    {
        "id": "648ad874a33c7973",
        "type": "group",
        "z": "c7141ffb22d64190",
        "g": "ca14f3586a7c5f24",
        "name": "Use within 30 seconds of pressing link button on Basement Hue bridge",
        "style": {
            "fill-opacity": "0.1",
            "label": true,
            "color": "#000000",
            "stroke": "none",
            "fill": "#000000"
        },
        "nodes": [
            "497b08f40cd0b29c",
            "9bcb520fd937694d",
            "7639b738a201d7c6"
        ],
        "x": 54,
        "y": 439,
        "w": 752,
        "h": 82
    },
    {
        "id": "0fc22be05cfc5241",
        "type": "group",
        "z": "c7141ffb22d64190",
        "g": "ca14f3586a7c5f24",
        "name": "Listen to events from Basement Hue bridge",
        "style": {
            "stroke": "none",
            "fill": "#000000",
            "fill-opacity": "0.1",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "1209a8480a23b591",
            "14944e047cba03fa",
            "5e2f8ae74b053fc9",
            "a5f013472e32f50c",
            "65911d8f953e99bf"
        ],
        "x": 54,
        "y": 639,
        "w": 642,
        "h": 122
    },
    {
        "id": "00ad2b71a9c29a21",
        "type": "group",
        "z": "e44149a93fbe9b1b",
        "g": "e29b5646cac97198",
        "name": "Turn off main bathroom lights",
        "style": {
            "stroke": "none",
            "fill": "#000000",
            "fill-opacity": "0.1",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "08ca72b8e815a992",
            "2736157993771007",
            "0cb4aa086519cdc3"
        ],
        "x": 114,
        "y": 399,
        "w": 452,
        "h": 82
    },
    {
        "id": "513bc529c9c10fa0",
        "type": "group",
        "z": "e44149a93fbe9b1b",
        "g": "e29b5646cac97198",
        "name": "Activate main bathroom nightlight scene",
        "style": {
            "stroke": "none",
            "fill": "#000000",
            "fill-opacity": "0.1",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "3deabbac44606076",
            "ec0f7c926936a835",
            "1af873ecc08861c7"
        ],
        "x": 114,
        "y": 499,
        "w": 472,
        "h": 82
    },
    {
        "id": "26622bde8cf9b262",
        "type": "group",
        "z": "e44149a93fbe9b1b",
        "g": "d23ba68654f3c055",
        "name": "Activate yard sunset scene",
        "style": {
            "stroke": "none",
            "fill": "#000000",
            "fill-opacity": "0.1",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "51e789d7146d158c",
            "bcf937398010e69d",
            "8c8685c28661026d"
        ],
        "x": 734,
        "y": 139,
        "w": 452,
        "h": 82
    },
    {
        "id": "c083702f726a3c76",
        "type": "group",
        "z": "e44149a93fbe9b1b",
        "g": "d23ba68654f3c055",
        "name": "Activate yard jolly scene",
        "style": {
            "stroke": "none",
            "fill": "#000000",
            "fill-opacity": "0.1",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "973da59b5e8db353",
            "434961afc8e6268a",
            "c639897051efe373"
        ],
        "x": 734,
        "y": 439,
        "w": 452,
        "h": 82
    },
    {
        "id": "1f51b2e96d97963e",
        "type": "group",
        "z": "e44149a93fbe9b1b",
        "g": "d23ba68654f3c055",
        "name": "Turn off yard lights",
        "style": {
            "stroke": "none",
            "fill": "#000000",
            "fill-opacity": "0.1",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "de84c77427959f96",
            "f224835045d99471",
            "30ad3f93b6509f97"
        ],
        "x": 734,
        "y": 39,
        "w": 452,
        "h": 82
    },
    {
        "id": "73df20e8ccdbf56c",
        "type": "group",
        "z": "e44149a93fbe9b1b",
        "g": "d23ba68654f3c055",
        "name": "Activate yard spooky scene",
        "style": {
            "stroke": "none",
            "fill": "#000000",
            "fill-opacity": "0.1",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "6bc33e9277b4e511",
            "f92a8accf963b5bf",
            "9f798cee87b95525"
        ],
        "x": 734,
        "y": 339,
        "w": 472,
        "h": 82
    },
    {
        "id": "f6597e2f37dd2636",
        "type": "group",
        "z": "e44149a93fbe9b1b",
        "g": "d23ba68654f3c055",
        "name": "Activate yard tribal scene",
        "style": {
            "stroke": "none",
            "fill": "#000000",
            "fill-opacity": "0.1",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "ccd0f26bea9262e7",
            "7ac02c6645861b20",
            "e444798d5fd55433"
        ],
        "x": 734,
        "y": 239,
        "w": 452,
        "h": 82
    },
    {
        "id": "8fc06747717d00eb",
        "type": "group",
        "z": "997764cb1253a223",
        "g": "43456594e4cb4e24",
        "name": "unidirectional receive from any connected sender",
        "style": {
            "stroke": "none",
            "fill": "#000000",
            "fill-opacity": "0.1",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "d6d20cb20e9e643b",
            "3dd30f8784d759bb"
        ],
        "x": 54,
        "y": 219
    },
    {
        "id": "6a70472869a0916a",
        "type": "group",
        "z": "997764cb1253a223",
        "g": "cc17bdf0cffdd1a1",
        "name": "unidirectional send to all connected receivers",
        "style": {
            "stroke": "none",
            "fill": "#000000",
            "fill-opacity": "0.1",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "9ebfab406a5ca7c4",
            "06c6c945e8d5887f",
            "b2ebd790a5119ac7"
        ],
        "x": 294,
        "y": 59
    },
    {
        "id": "e7f5a72a22121c8f",
        "type": "group",
        "z": "997764cb1253a223",
        "g": "4245d7c744b6be94",
        "name": "bidirectional broadcast to all connected clients",
        "style": {
            "stroke": "none",
            "fill": "#000000",
            "fill-opacity": "0.1",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "e2d9ed9e8373cc0d",
            "65391bdd2e45d311",
            "67ab43420a885103"
        ],
        "x": 54,
        "y": 539
    },
    {
        "id": "f62fd902bca5d337",
        "type": "group",
        "z": "997764cb1253a223",
        "g": "3792bffcc53d7d09",
        "name": "unicast response to original sender",
        "style": {
            "stroke": "none",
            "fill": "#000000",
            "fill-opacity": "0.1",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "0fa7147e765e3a0a",
            "ca533975bad3a01a",
            "1cb6cc25224307af"
        ],
        "x": 814,
        "y": 379
    },
    {
        "id": "6cf254b5fbe8d9c1",
        "type": "group",
        "z": "997764cb1253a223",
        "g": "3792bffcc53d7d09",
        "name": "unicast receive from any connected sender",
        "style": {
            "stroke": "none",
            "fill": "#000000",
            "fill-opacity": "0.1",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "83c531568daee540",
            "615ec4f521b2c7bf"
        ],
        "x": 54,
        "y": 379
    },
    {
        "id": "e9efa51261f6c783",
        "type": "group",
        "z": "984bed4cccaab194",
        "name": "Ground floor lights",
        "style": {
            "stroke": "none",
            "fill": "#000000",
            "fill-opacity": "0.1",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "c19f87c7eda22e58",
            "f6f8f4d6fd5dc7d0",
            "b5de3d2c560c6789",
            "18f71e5b40208e53",
            "a6a45d59c3f60b7d",
            "d95133804941b353",
            "92eaf49576e50a9e",
            "49b75a6fde0b6301",
            "683b5511f00d57d4"
        ],
        "x": 94,
        "y": 19,
        "w": 892,
        "h": 262
    },
    {
        "id": "f9e70c058a8efc82",
        "type": "group",
        "z": "1e9ddfd50242cb2a",
        "name": "Basement dashboard",
        "style": {
            "stroke": "none",
            "fill": "#000000",
            "fill-opacity": "0.1",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "2de7d056579133dc",
            "09ca011e26f258fb",
            "4fa7f069cac5ac37",
            "9b80a58f06cf0767",
            "caafe6f46e7bfe15",
            "c68cc429b9315c66",
            "962396c085fff789",
            "7ebfddb7b94e3eea"
        ],
        "x": 94,
        "y": 19,
        "w": 912,
        "h": 262
    },
    {
        "id": "1a405db7c77801ee",
        "type": "group",
        "z": "984bed4cccaab194",
        "name": "Window shades",
        "style": {
            "stroke": "none",
            "fill": "#000000",
            "fill-opacity": "0.1",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "7ba4579b7673a491",
            "9f3d946a03de6aa8",
            "ad9d1d2d1597d2ba",
            "676c095bc7abab1e",
            "356766b9c684121f",
            "92a8459af7433d08",
            "d0f7e42d37e33bcb",
            "d6caf0385ddcc934"
        ],
        "x": 94,
        "y": 299,
        "w": 342,
        "h": 262
    },
    {
        "id": "e79e0110c2317edb",
        "type": "tls-config",
        "name": "",
        "cert": "",
        "key": "",
        "ca": "",
        "certname": "",
        "keyname": "",
        "caname": "",
        "servername": "",
        "verifyservercert": false,
        "alpnprotocol": ""
    },
    {
        "id": "63c00f105cc3255f",
        "type": "ui_base",
        "theme": {
            "name": "theme-dark",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#9929bd",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#097479",
                    "value": "#9929bd",
                    "edited": true
                },
                "page-titlebar-backgroundColor": {
                    "value": "#9929bd",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#111111",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#bb58db",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#555555",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#eeeeee",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#9929bd",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#333333",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Waubesa",
            "hideToolbar": "false",
            "allowSwipe": "true",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "MM/DD/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "722d62f3b93039c3",
        "type": "mqtt-broker",
        "name": "",
        "broker": "broker.local",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "ec4d94df679f3b11",
        "type": "ui_tab",
        "name": "Automation",
        "icon": "fa-clock-o",
        "order": 3,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "25c7f0078ed443dd",
        "type": "ui_group",
        "name": "Time",
        "tab": "ec4d94df679f3b11",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "dc6e107af698a0c3",
        "type": "ui_group",
        "name": "CPU Temperature",
        "tab": "696b8efb10ee13b7",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "cfa1a0f4a477687c",
        "type": "ui_group",
        "name": "CPU Volts",
        "tab": "696b8efb10ee13b7",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "696b8efb10ee13b7",
        "type": "ui_tab",
        "name": "Monitoring",
        "icon": "dashboard",
        "order": 4,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "03b0e40844d33477",
        "type": "ui_group",
        "name": "Chez Nous Main",
        "tab": "ec4d94df679f3b11",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "a0da6d89d75fc6ac",
        "type": "ui_group",
        "name": "Basement Hue",
        "tab": "ec4d94df679f3b11",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "991046045b37e3ee",
        "type": "ui_group",
        "name": "MQTT Broker",
        "tab": "ec4d94df679f3b11",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "8055574ccb17e8ed",
        "type": "ui_group",
        "name": "Sun Position",
        "tab": "ec4d94df679f3b11",
        "order": 5,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "a6c038e4cae31f08",
        "type": "ui_group",
        "name": "loadavg",
        "tab": "696b8efb10ee13b7",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "66adb26e37268f4a",
        "type": "ui_group",
        "name": "freemem",
        "tab": "696b8efb10ee13b7",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "025512d801f893c2",
        "type": "websocket-listener",
        "z": "997764cb1253a223",
        "path": "/ws/command",
        "wholemsg": "true"
    },
    {
        "id": "3c53975cbddbb628",
        "type": "websocket-listener",
        "z": "997764cb1253a223",
        "path": "/ws/update",
        "wholemsg": "true"
    },
    {
        "id": "ecb690d3c11259df",
        "type": "websocket-listener",
        "z": "997764cb1253a223",
        "path": "/ws/broadcast",
        "wholemsg": "true"
    },
    {
        "id": "83dce741285f9890",
        "type": "websocket-listener",
        "path": "/ws/request",
        "wholemsg": "true"
    },
    {
        "id": "791bf5d34d06adaf",
        "type": "ui_tab",
        "name": "Ground Floor",
        "icon": "fa-home",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "b092a43dac832410",
        "type": "ui_group",
        "name": "Lighting",
        "tab": "6d3a2c4307ffbdf9",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "21f11f110d626f5a",
        "type": "ui_group",
        "name": "Lighting",
        "tab": "791bf5d34d06adaf",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "d0b96e9f8503bef3",
        "type": "ui_group",
        "name": "Living Room Shades",
        "tab": "791bf5d34d06adaf",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "a81011918a2f3acc",
        "type": "ui_group",
        "name": "Dining Room Shades",
        "tab": "791bf5d34d06adaf",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "6d3a2c4307ffbdf9",
        "type": "ui_tab",
        "name": "Basement",
        "icon": "fa-home",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "c9c806d81ab63ac4",
        "type": "delay",
        "z": "5785c8d9f39df67e",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 170,
        "y": 60,
        "wires": [
            [
                "fa870f94fa1ea10b"
            ]
        ]
    },
    {
        "id": "fa870f94fa1ea10b",
        "type": "change",
        "z": "5785c8d9f39df67e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{\"hue-application-key\": $env('KEY')}",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "url",
                "pt": "msg",
                "to": "'https://' & $env('ADDRESS') & '/clip/v2/' & topic",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 340,
        "y": 60,
        "wires": [
            [
                "20ac42d7649c260a"
            ]
        ]
    },
    {
        "id": "20ac42d7649c260a",
        "type": "http request",
        "z": "5785c8d9f39df67e",
        "name": "",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "e79e0110c2317edb",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 510,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "1e35b6e766e6b3d1",
        "type": "status",
        "z": "5785c8d9f39df67e",
        "name": "",
        "scope": [
            "c9c806d81ab63ac4"
        ],
        "x": 520,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "e4718ecfdb248cc7",
        "type": "http request",
        "z": "75bc72a16c4da2c8",
        "name": "",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "e79e0110c2317edb",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 330,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "7316ae1eef4c6295",
        "type": "change",
        "z": "75bc72a16c4da2c8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"devicetype\":$env('USERNAME'),\"generateclientkey\":true}",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "url",
                "pt": "msg",
                "to": "'https://' & $env('ADDRESS') & '/api'",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 160,
        "y": 40,
        "wires": [
            [
                "e4718ecfdb248cc7"
            ]
        ]
    },
    {
        "id": "64ad1b43047cb836",
        "type": "status",
        "z": "75bc72a16c4da2c8",
        "name": "",
        "scope": [
            "e4718ecfdb248cc7"
        ],
        "x": 340,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "cd442f62fd059172",
        "type": "change",
        "z": "9c4e4702e4660adf",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "url",
                "pt": "msg",
                "to": "'http://' & $env('ADDRESS') & '/api/scenes?sceneId=' & payload",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 330,
        "y": 60,
        "wires": [
            [
                "8dc3bcf508fc6c98"
            ]
        ]
    },
    {
        "id": "8dc3bcf508fc6c98",
        "type": "http request",
        "z": "9c4e4702e4660adf",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 490,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "728ab503eb1eb941",
        "type": "status",
        "z": "9c4e4702e4660adf",
        "name": "",
        "scope": [
            "dcd553804e687131"
        ],
        "x": 500,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "dcd553804e687131",
        "type": "delay",
        "z": "9c4e4702e4660adf",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 170,
        "y": 60,
        "wires": [
            [
                "cd442f62fd059172"
            ]
        ]
    },
    {
        "id": "465f820637e0f695",
        "type": "change",
        "z": "4920eed654c67f8d",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "url",
                "pt": "msg",
                "to": "'http://' & $env('ADDRESS') & '/api/' & topic & '/'",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 170,
        "y": 100,
        "wires": [
            [
                "e62fe5c7c72b90ee"
            ]
        ]
    },
    {
        "id": "e62fe5c7c72b90ee",
        "type": "http request",
        "z": "4920eed654c67f8d",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 330,
        "y": 100,
        "wires": [
            [
                "35c708b92ea8024b"
            ]
        ]
    },
    {
        "id": "014121091f945d16",
        "type": "status",
        "z": "4920eed654c67f8d",
        "name": "",
        "scope": [
            "e62fe5c7c72b90ee"
        ],
        "x": 540,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "35c708b92ea8024b",
        "type": "change",
        "z": "4920eed654c67f8d",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"text\":statusCode,\"shape\":\"dot\",\"fill\":(statusCode = 200 ? \"green\" : (statusCode < 200 or statusCode > 299 ? \"red\": \"yellow\"))}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 520,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "7004b9b981e156bb",
        "type": "mqtt in",
        "z": "c4207c9fe61a900e",
        "name": "",
        "topic": "${TOPIC}",
        "qos": "2",
        "datatype": "utf8",
        "broker": "722d62f3b93039c3",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 100,
        "y": 60,
        "wires": [
            [
                "27992b230d72f19f"
            ]
        ]
    },
    {
        "id": "46fb2d69cd82b25c",
        "type": "change",
        "z": "c4207c9fe61a900e",
        "name": "set topic to host name",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "$split(topic,'/')[1]",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "27992b230d72f19f",
        "type": "switch",
        "z": "c4207c9fe61a900e",
        "name": "not retained?",
        "property": "retain",
        "propertyType": "msg",
        "rules": [
            {
                "t": "false"
            }
        ],
        "checkall": "false",
        "repair": true,
        "outputs": 1,
        "x": 250,
        "y": 60,
        "wires": [
            [
                "b22cc992e37360fc"
            ]
        ]
    },
    {
        "id": "b22cc992e37360fc",
        "type": "json",
        "z": "c4207c9fe61a900e",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 390,
        "y": 60,
        "wires": [
            [
                "46fb2d69cd82b25c"
            ]
        ]
    },
    {
        "id": "882622dc891aeda6",
        "type": "catch",
        "z": "c4207c9fe61a900e",
        "name": "",
        "scope": [
            "b22cc992e37360fc"
        ],
        "uncaught": false,
        "x": 390,
        "y": 140,
        "wires": [
            [
                "46fb2d69cd82b25c"
            ]
        ]
    },
    {
        "id": "e81b7e6a74a922a1",
        "type": "status",
        "z": "c4207c9fe61a900e",
        "name": "",
        "scope": null,
        "x": 620,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "7972bbcf134f786b",
        "type": "function",
        "z": "4e89e7c952d56c09",
        "name": "updateState",
        "func": "node.status({\n    text: msg.topic + ' ' + msg.payload.type,\n    shape: 'dot',\n    fill: 'blue'\n})\n\nconst state = flow.get('state') || {}\nconst type = state[msg.payload.type] || {}\nconst resource = type[msg.payload.id] || {}\n\nfor (let attribute in msg.payload) {\n\n    resource[attribute] = msg.payload[attribute]\n\n}\n\ntype[resource.id] = resource\nstate[resource.type] = type\nflow.set('state', state)\n\nmsg.topic = env.get('TOPIC') + '/' + resource.type + '/' + resource.id\nmsg.qos = 2\nmsg.retain = true\nmsg.payload = resource\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 970,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "74ccf37d5b5cc460",
        "type": "switch",
        "z": "4e89e7c952d56c09",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "jsonata_exp",
                "v": "topic = 'add' or topic = 'update'",
                "vt": "jsonata"
            },
            {
                "t": "eq",
                "v": "delete",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 810,
        "y": 180,
        "wires": [
            [
                "7972bbcf134f786b"
            ],
            [
                "f3d6eb631a33249c"
            ]
        ]
    },
    {
        "id": "f3d6eb631a33249c",
        "type": "function",
        "z": "4e89e7c952d56c09",
        "name": "deleteState",
        "func": "node.status({\n    text: msg.topic + ' ' + msg.payload.type,\n    shape: 'dot',\n    fill: 'blue'\n})\n\nconst state = flow.get('state') || {}\n\nif (Object.prototype.hasOwnProperty.call(state, msg.payload.type)) {\n\n    const type = state[msg.payload.type]\n\n    if (Object.prototype.hasOwnProperty.call(type, msg.payload.id)) {\n\n        delete type[msg.payload.id]\n\n    }\n\n}\n\nflow.set('state', state)\n\nmsg.topic = env.get('TOPIC') + '/' + msg.payload.type + '/' + msg.payload.id\nmsg.qos = 2\nmsg.retain = true\nmsg.payload = ''\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 970,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "35fad88b119f8f36",
        "type": "status",
        "z": "4e89e7c952d56c09",
        "name": "",
        "scope": [
            "b3c5813303ac7896"
        ],
        "x": 580,
        "y": 380,
        "wires": [
            [
                "9827fd9dee4289ac"
            ]
        ]
    },
    {
        "id": "b3c5813303ac7896",
        "type": "subflow:de620fed3bdb7aa9",
        "z": "4e89e7c952d56c09",
        "name": "",
        "x": 410,
        "y": 280,
        "wires": [
            [
                "c51e9f68572dcd4f"
            ],
            [
                "1bf87f4377d87af1"
            ],
            [
                "1bf87f4377d87af1"
            ]
        ]
    },
    {
        "id": "98d7f50f7db89d4d",
        "type": "subflow:a34d4eb04cf45884",
        "z": "4e89e7c952d56c09",
        "name": "",
        "x": 620,
        "y": 140,
        "wires": [
            [
                "74ccf37d5b5cc460"
            ]
        ]
    },
    {
        "id": "c51e9f68572dcd4f",
        "type": "subflow:4b1f9e8c23fa098d",
        "z": "4e89e7c952d56c09",
        "name": "",
        "x": 630,
        "y": 220,
        "wires": [
            [
                "74ccf37d5b5cc460"
            ]
        ]
    },
    {
        "id": "42539f9217e51fbd",
        "type": "change",
        "z": "4e89e7c952d56c09",
        "name": "hue parameters",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"url\":\"https://\" & $env('ADDRESS') & \"/eventstream/clip/v2\",\"initDict\":{\"withCredentials\":false,\"https\":{\"rejectUnauthorized\":false},\"headers\":{\"hue-application-key\":$env('KEY')}}}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 220,
        "y": 280,
        "wires": [
            [
                "b3c5813303ac7896"
            ]
        ]
    },
    {
        "id": "1bf87f4377d87af1",
        "type": "change",
        "z": "4e89e7c952d56c09",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "$env('TOPIC') & '/' & topic",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "qos",
                "pt": "msg",
                "to": "2",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "retain",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 960,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "9827fd9dee4289ac",
        "type": "change",
        "z": "4e89e7c952d56c09",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "status",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "$number(status.text)",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 760,
        "y": 340,
        "wires": [
            [
                "1bf87f4377d87af1"
            ]
        ]
    },
    {
        "id": "630e5fb465ec65c9",
        "type": "function",
        "z": "4e89e7c952d56c09",
        "name": "metadata",
        "func": "function findReferences(groupId, key, resources) {\n\n    const references = []\n\n    resources.forEach(resource => {\n\n        if (resource[key].rid == groupId) {\n\n            references.push(resource)\n\n        }\n    })\n\n    return references\n\n}\n\nfunction getGroup(group, metadata, groups) {\n\n    const groupName = group.metadata.name\n    const groupType = group.type\n    const groupId = group.id\n    const s = findReferences(groupId, 'group', metadata.scene)\n    const grouped_lights = findReferences(groupId, 'owner', metadata.grouped_light)\n    const type = groups[groupType] || {}\n    const scene = {}\n\n    s.forEach(ss => {\n\n        scene[ss.metadata.name] = ss.id\n\n    })\n\n    type[groupName] = {\n        grouped_light: grouped_lights[0].id,\n        scene: scene\n    }\n\n    groups[groupType] = type\n\n}\n\nconst resources = msg.payload.data\nconst metadata = {}\n\nresources.forEach((/** @type {{ type: string | number; }} */ resource) => {\n    \n    const type = metadata[resource.type] || []\n    type.push(resource)\n    metadata[resource.type] = type\n\n})\n\nconst groups = {}\nconst rooms = metadata.room || []\nconst zones = metadata.zone || []\n\nrooms.forEach((/** @type {any} */ room) => {\n\n    getGroup(room, metadata, groups)\n\n})\n\nzones.forEach((/** @type {any} */ zone) => {\n\n    getGroup(zone, metadata, groups)\n\n})\n\nmsg.metadata = metadata\nmsg.payload = groups\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 60,
        "wires": [
            []
        ],
        "outputLabels": [
            "merged"
        ]
    },
    {
        "id": "cdd12e98966ee7c4",
        "type": "EventSource",
        "z": "de620fed3bdb7aa9",
        "name": "",
        "x": 1030,
        "y": 220,
        "wires": [
            [
                "0d59cdef0e0a6e85"
            ],
            [
                "0d59cdef0e0a6e85"
            ],
            [
                "10539047c783b994"
            ]
        ]
    },
    {
        "id": "eef1022d50fc9776",
        "type": "change",
        "z": "de620fed3bdb7aa9",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "parameters",
                "pt": "flow",
                "to": "payload",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 830,
        "y": 180,
        "wires": [
            [
                "cdd12e98966ee7c4"
            ]
        ]
    },
    {
        "id": "d901234fd1fce55c",
        "type": "status",
        "z": "de620fed3bdb7aa9",
        "name": "",
        "scope": [
            "cdd12e98966ee7c4"
        ],
        "x": 100,
        "y": 300,
        "wires": [
            [
                "fabe0aac918a0c99"
            ]
        ]
    },
    {
        "id": "fabe0aac918a0c99",
        "type": "switch",
        "z": "de620fed3bdb7aa9",
        "name": "readyState = 2?",
        "property": "status.text",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "2",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 280,
        "y": 260,
        "wires": [
            [
                "48fa5f1a9c9b1ec2"
            ],
            [
                "084266e8becbe572"
            ]
        ]
    },
    {
        "id": "c97d943953f14d84",
        "type": "trigger",
        "z": "de620fed3bdb7aa9",
        "name": "watchdog",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "date",
        "duration": "1",
        "extend": true,
        "overrideDelay": true,
        "units": "min",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 660,
        "y": 260,
        "wires": [
            [
                "ba3b9c14ec9f5691"
            ]
        ]
    },
    {
        "id": "084266e8becbe572",
        "type": "change",
        "z": "de620fed3bdb7aa9",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "reset",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 480,
        "y": 300,
        "wires": [
            [
                "c97d943953f14d84"
            ]
        ]
    },
    {
        "id": "0d59cdef0e0a6e85",
        "type": "link out",
        "z": "de620fed3bdb7aa9",
        "name": "watchdog",
        "mode": "link",
        "links": [
            "1d6da76cca173646"
        ],
        "x": 1215,
        "y": 160,
        "wires": []
    },
    {
        "id": "1d6da76cca173646",
        "type": "link in",
        "z": "de620fed3bdb7aa9",
        "name": "watchdog",
        "links": [
            "0d59cdef0e0a6e85"
        ],
        "x": 345,
        "y": 180,
        "wires": [
            [
                "48fa5f1a9c9b1ec2"
            ]
        ],
        "info": "// nrlint align-to-grid:off\n"
    },
    {
        "id": "3ba637cbe04def58",
        "type": "link in",
        "z": "de620fed3bdb7aa9",
        "name": "reset",
        "links": [
            "10539047c783b994",
            "df7f3018ef95e2a2"
        ],
        "x": 345,
        "y": 340,
        "wires": [
            [
                "084266e8becbe572"
            ]
        ],
        "info": "// nrlint align-to-grid:off\n"
    },
    {
        "id": "10539047c783b994",
        "type": "link out",
        "z": "de620fed3bdb7aa9",
        "name": "reset",
        "mode": "link",
        "links": [
            "3ba637cbe04def58"
        ],
        "x": 1215,
        "y": 340,
        "wires": []
    },
    {
        "id": "df7f3018ef95e2a2",
        "type": "link out",
        "z": "de620fed3bdb7aa9",
        "name": "reset",
        "mode": "link",
        "links": [
            "3ba637cbe04def58"
        ],
        "x": 755,
        "y": 100,
        "wires": []
    },
    {
        "id": "48fa5f1a9c9b1ec2",
        "type": "change",
        "z": "de620fed3bdb7aa9",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "delay",
                "pt": "msg",
                "to": "TIMEOUT",
                "tot": "env"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 480,
        "y": 220,
        "wires": [
            [
                "c97d943953f14d84"
            ]
        ]
    },
    {
        "id": "ba3b9c14ec9f5691",
        "type": "change",
        "z": "de620fed3bdb7aa9",
        "name": "get flow.parameters",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "parameters",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 830,
        "y": 260,
        "wires": [
            [
                "cdd12e98966ee7c4"
            ]
        ]
    },
    {
        "id": "6b8a0e371954f465",
        "type": "function",
        "z": "a34d4eb04cf45884",
        "name": "segregateTypes",
        "func": "if (msg.payload.errors.length > 0) {\n\n    throw msg.payload.errors\n\n}\n\nlet resources = msg.payload.data\n\nlet arrays = {}\n\nresources.forEach((/** @type {{ type: string | number; }} */ resource) => {\n\n    let array = arrays[resource.type] || []\n    \n    array.push(resource)\n    arrays[resource.type] = array\n\n})\n\nmsg.payload = arrays\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 180,
        "y": 60,
        "wires": [
            [
                "2e7becc56a96c4dc"
            ]
        ]
    },
    {
        "id": "2e7becc56a96c4dc",
        "type": "split",
        "z": "a34d4eb04cf45884",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "topic",
        "x": 330,
        "y": 60,
        "wires": [
            [
                "b1dd91dbd450f89f"
            ]
        ]
    },
    {
        "id": "b1dd91dbd450f89f",
        "type": "switch",
        "z": "a34d4eb04cf45884",
        "name": "filter resources",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "jsonata_exp",
                "v": "topic = 'grouped_light' or topic = 'button' or topic = 'motion'",
                "vt": "jsonata"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 1,
        "x": 480,
        "y": 60,
        "wires": [
            [
                "c38043f17fec59c0"
            ]
        ]
    },
    {
        "id": "c38043f17fec59c0",
        "type": "split",
        "z": "a34d4eb04cf45884",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 630,
        "y": 60,
        "wires": [
            [
                "2d8a3e52f4b83d16"
            ]
        ]
    },
    {
        "id": "2d8a3e52f4b83d16",
        "type": "change",
        "z": "a34d4eb04cf45884",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "update",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 770,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "11642f950d52a63f",
        "type": "change",
        "z": "4b1f9e8c23fa098d",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.data",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 180,
        "y": 100,
        "wires": [
            [
                "d6816cf71b63c27e"
            ]
        ]
    },
    {
        "id": "d6816cf71b63c27e",
        "type": "json",
        "z": "4b1f9e8c23fa098d",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 330,
        "y": 100,
        "wires": [
            [
                "b4da061c0dd45c54"
            ]
        ]
    },
    {
        "id": "b4da061c0dd45c54",
        "type": "split",
        "z": "4b1f9e8c23fa098d",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 450,
        "y": 100,
        "wires": [
            [
                "94e9fe9a9f7af221"
            ]
        ]
    },
    {
        "id": "94e9fe9a9f7af221",
        "type": "change",
        "z": "4b1f9e8c23fa098d",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "payload.type",
                "tot": "msg"
            },
            {
                "t": "move",
                "p": "payload.data",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 600,
        "y": 100,
        "wires": [
            [
                "c4f2d5d0acdf4cc1"
            ]
        ]
    },
    {
        "id": "c4f2d5d0acdf4cc1",
        "type": "split",
        "z": "4b1f9e8c23fa098d",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 750,
        "y": 100,
        "wires": [
            [
                "612b03cff3e03da9"
            ]
        ]
    },
    {
        "id": "612b03cff3e03da9",
        "type": "change",
        "z": "4b1f9e8c23fa098d",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"text\":payload.type,\"shape\":\"ring\",\"fill\":\"blue\"}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 920,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "a22feaa163af73a9",
        "type": "mqtt in",
        "z": "658f7950e449a6aa",
        "name": "",
        "topic": "${TOPIC}",
        "qos": "2",
        "datatype": "json",
        "broker": "722d62f3b93039c3",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 100,
        "y": 100,
        "wires": [
            [
                "11ead2b503a6826b"
            ]
        ]
    },
    {
        "id": "11ead2b503a6826b",
        "type": "rbe",
        "z": "658f7950e449a6aa",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 230,
        "y": 100,
        "wires": [
            [
                "64a29e093d39ddca"
            ]
        ]
    },
    {
        "id": "64a29e093d39ddca",
        "type": "change",
        "z": "658f7950e449a6aa",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t   \"text\":payload,\t   \"shape\":\"dot\",\t   \"fill\":\"blue\"\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 400,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "3889cb8956554e6f",
        "type": "mqtt in",
        "z": "9601cbf2386d897b",
        "name": "",
        "topic": "${TOPIC}",
        "qos": "2",
        "datatype": "json",
        "broker": "722d62f3b93039c3",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 100,
        "y": 100,
        "wires": [
            [
                "29db695f97cc5757"
            ]
        ]
    },
    {
        "id": "29db695f97cc5757",
        "type": "function",
        "z": "9601cbf2386d897b",
        "name": "count",
        "func": "let count = context.get('count') || 0\n\ncount += 1\ncontext.set('count', count)\n\nnode.status({\n    fill: \"blue\",\n    shape: \"dot\",\n    text: count\n})\n\nreturn [\n    msg,\n    { payload: count }\n]",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 100,
        "wires": [
            [],
            []
        ],
        "outputLabels": [
            "msg",
            "count"
        ]
    },
    {
        "id": "3f4427884112393c",
        "type": "status",
        "z": "9601cbf2386d897b",
        "name": "",
        "scope": [
            "29db695f97cc5757"
        ],
        "x": 240,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "e38879a57c5ccc08",
        "type": "function",
        "z": "60301f96c2ad2e7c",
        "name": "findScene",
        "func": "const name = env.get('NAME')\nconst metadata = flow.get('$parent.metadata') || []\n\nfor (let index = 0; index < metadata.length; ++index) {\n\n    const scene = metadata[index]\n\n    if (scene.sceneName == name) {\n\n        msg.payload = scene.sceneId\n        node.status({\n            fill: \"blue\",\n            shape: \"dot\",\n            text: scene.sceneName + ' | ' + scene.sceneId\n        })\n        return msg\n\n    }\n}\n\nnode.status({\n    fill: \"red\",\n    shape: \"dot\",\n    text: 'no scene found named \"' + name + '\"'\n})\nreturn null",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 160,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "389a164ec26435b2",
        "type": "status",
        "z": "60301f96c2ad2e7c",
        "name": "",
        "scope": [
            "e38879a57c5ccc08"
        ],
        "x": 160,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "7f7ef86a4212cda9",
        "type": "mqtt in",
        "z": "be201d7a24b331c5",
        "name": "",
        "topic": "${TOPIC}",
        "qos": "2",
        "datatype": "json",
        "broker": "722d62f3b93039c3",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 160,
        "y": 80,
        "wires": [
            [
                "a96e0b1ad753faa2"
            ]
        ]
    },
    {
        "id": "a96e0b1ad753faa2",
        "type": "function",
        "z": "be201d7a24b331c5",
        "name": "formatTime",
        "func": "const date = new Date(msg.payload)\n\nmsg.payload = date.toLocaleTimeString()\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 80,
        "wires": [
            [
                "644bea96363a82cd"
            ]
        ]
    },
    {
        "id": "644bea96363a82cd",
        "type": "change",
        "z": "be201d7a24b331c5",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"text\":payload,\"shape\":\"dot\",\"fill\":\"blue\"}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 500,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "2ba0e995c3cf4cd0",
        "type": "function",
        "z": "97864671c1ced479",
        "name": "process hue metadata",
        "func": "const name = env.get('GLOBAL')\n\nglobal.set(name, msg.payload)\n\nconst groups = {}\nconst scenes = {}\n\nfor (let groupName in msg.payload) {\n\n    const g = msg.payload[groupName]\n    const groupId = g.id\n    const groupType = g.type\n    const group = {}\n    const gg = groups[groupType] || []\n\n    group[groupName] = groupId\n    gg.push(group)\n\n    g.scene.forEach((/** @type {{ name: any; id: any; }} */ s) => {\n\n        const sceneName = s.name\n        const sceneId = s.id\n        const scene = {}\n\n        scene[sceneName] = sceneId\n        scenes[groupName] = scene\n\n    })\n}\n\nreturn [\n    { payload: groups },\n    { payload: scenes }\n]",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 100,
        "wires": [
            [],
            []
        ],
        "outputLabels": [
            "groups",
            "scenes"
        ]
    },
    {
        "id": "75b9e19e2accb4d5",
        "type": "function",
        "z": "648d285142674988",
        "name": "group options",
        "func": "const msgs = []\n\nfunction sceneOptions(groupName, group) {\n\n    const options = []\n\n    for (let sceneName in group.scene) {\n\n        const sceneId = group.scene[sceneName]\n        const option = {}\n\n        option[sceneName] = sceneId\n        options.push(option)\n\n    }\n\n    msgs.push({\n        topic: 'scene',\n        group: groupName,\n        options: options\n    })\n}\n\nfunction groupedLightOptions() {\n\n    const options = []\n\n    for (let typeName in msg.payload) {\n\n        const type = msg.payload[typeName]\n\n        for (let groupName in type) {\n\n            const group = type[groupName]\n            const grouped_light = group.grouped_light\n            const option = {}\n\n            option[groupName] = grouped_light\n            options.push(option)\n            sceneOptions(groupName, group)\n\n        }\n    }\n\n    msgs.push({\n        topic: 'grouped_light',\n        options: options\n    })\n}\n\ngroupedLightOptions()\n\nreturn [msgs]",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 180,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "485df563c6545698",
        "type": "join",
        "z": "cbd68ba9caa96a3d",
        "g": "98cf3b8910bc4f22",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": true,
        "timeout": "",
        "count": "3",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 550,
        "y": 320,
        "wires": [
            [
                "98e07825f41a09a2"
            ]
        ]
    },
    {
        "id": "98e07825f41a09a2",
        "type": "rbe",
        "z": "cbd68ba9caa96a3d",
        "g": "98cf3b8910bc4f22",
        "name": "",
        "func": "rbei",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 670,
        "y": 320,
        "wires": [
            [
                "1b5ab2bf7ea37b3b"
            ]
        ]
    },
    {
        "id": "1b5ab2bf7ea37b3b",
        "type": "switch",
        "z": "cbd68ba9caa96a3d",
        "g": "98cf3b8910bc4f22",
        "name": "automation enabled?",
        "property": "payload.enable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 840,
        "y": 320,
        "wires": [
            [
                "60f145bb0461c216"
            ]
        ]
    },
    {
        "id": "21af7493f52944f5",
        "type": "ui_switch",
        "z": "cbd68ba9caa96a3d",
        "g": "98cf3b8910bc4f22",
        "name": "Enable Automation",
        "label": "Enable",
        "tooltip": "",
        "group": "25c7f0078ed443dd",
        "order": 12,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 430,
        "y": 440,
        "wires": [
            [
                "83d6d8f537b0c172"
            ]
        ]
    },
    {
        "id": "1e6ace60764fec35",
        "type": "mqtt in",
        "z": "cbd68ba9caa96a3d",
        "g": "98cf3b8910bc4f22",
        "name": "",
        "topic": "nodered/automation/enable",
        "qos": "2",
        "datatype": "json",
        "broker": "722d62f3b93039c3",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 170,
        "y": 380,
        "wires": [
            [
                "21af7493f52944f5",
                "784c9929fe789981"
            ]
        ]
    },
    {
        "id": "83d6d8f537b0c172",
        "type": "change",
        "z": "cbd68ba9caa96a3d",
        "g": "98cf3b8910bc4f22",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "nodered/automation/enable",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "qos",
                "pt": "msg",
                "to": "2",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "retain",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 620,
        "y": 440,
        "wires": [
            [
                "08157854eff23df6"
            ]
        ]
    },
    {
        "id": "08157854eff23df6",
        "type": "link out",
        "z": "cbd68ba9caa96a3d",
        "g": "98cf3b8910bc4f22",
        "name": "send to broker",
        "mode": "link",
        "links": [
            "dd7609e91ad64f63"
        ],
        "x": 735,
        "y": 440,
        "wires": []
    },
    {
        "id": "60f145bb0461c216",
        "type": "link out",
        "z": "cbd68ba9caa96a3d",
        "g": "98cf3b8910bc4f22",
        "name": "automation",
        "mode": "link",
        "links": [
            "8a8dae1a991c5376",
            "e8aea84566ec0214",
            "129472d1fd39302b",
            "7acccda8a421da34",
            "805a96f9c1561bcd",
            "aafc4027ba2b619f"
        ],
        "x": 975,
        "y": 320,
        "wires": []
    },
    {
        "id": "5950aa6c0df32eb2",
        "type": "link out",
        "z": "cbd68ba9caa96a3d",
        "g": "1f88f9981ae4ba5f",
        "name": "activate morning",
        "mode": "link",
        "links": [
            "e74fcadba6a2b4ca",
            "07ccb0b07e6fada8",
            "ec4c4a28a59d105e",
            "08ca72b8e815a992",
            "de84c77427959f96"
        ],
        "x": 815,
        "y": 540,
        "wires": []
    },
    {
        "id": "4ed8bcf218333395",
        "type": "link out",
        "z": "cbd68ba9caa96a3d",
        "g": "1f88f9981ae4ba5f",
        "name": "activate night",
        "mode": "link",
        "links": [
            "fbd53f7f18ca6655",
            "3ed1a4d37d1548b4",
            "ec4c4a28a59d105e",
            "ec0f7c926936a835",
            "de84c77427959f96"
        ],
        "x": 815,
        "y": 700,
        "wires": []
    },
    {
        "id": "b29a7ab55a3476e5",
        "type": "link out",
        "z": "cbd68ba9caa96a3d",
        "g": "1f88f9981ae4ba5f",
        "name": "trigger main floor evening",
        "mode": "link",
        "links": [
            "6cae9b1ccc68cb9e"
        ],
        "x": 815,
        "y": 660,
        "wires": []
    },
    {
        "id": "6a4e3c8d5c47d1b7",
        "type": "link out",
        "z": "cbd68ba9caa96a3d",
        "g": "1f88f9981ae4ba5f",
        "name": "trigger yard tribal",
        "mode": "link",
        "links": [
            "a6475288998b4e07",
            "7ac02c6645861b20"
        ],
        "x": 975,
        "y": 540,
        "wires": []
    },
    {
        "id": "e0a9d45fbfcb3532",
        "type": "link out",
        "z": "cbd68ba9caa96a3d",
        "g": "1f88f9981ae4ba5f",
        "name": "trigger yard spooky",
        "mode": "link",
        "links": [
            "a225232dc86a3b6f",
            "f92a8accf963b5bf"
        ],
        "x": 975,
        "y": 580,
        "wires": []
    },
    {
        "id": "758cfea08b622975",
        "type": "link out",
        "z": "cbd68ba9caa96a3d",
        "g": "1f88f9981ae4ba5f",
        "name": "trigger yard jolly",
        "mode": "link",
        "links": [
            "60976d31a8dafe99",
            "a225232dc86a3b6f",
            "a6475288998b4e07",
            "434961afc8e6268a",
            "f92a8accf963b5bf",
            "7ac02c6645861b20"
        ],
        "x": 975,
        "y": 620,
        "wires": []
    },
    {
        "id": "b8723d53ddad808a",
        "type": "link out",
        "z": "cbd68ba9caa96a3d",
        "g": "1f88f9981ae4ba5f",
        "name": "trigger yard standard",
        "mode": "link",
        "links": [
            "18f53b7627e645e4",
            "bcf937398010e69d"
        ],
        "x": 975,
        "y": 660,
        "wires": []
    },
    {
        "id": "0156a364439561a8",
        "type": "switch",
        "z": "cbd68ba9caa96a3d",
        "g": "1f88f9981ae4ba5f",
        "name": "time",
        "property": "payload.time",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "morning",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "evening",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "night",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 3,
        "x": 670,
        "y": 620,
        "wires": [
            [
                "5950aa6c0df32eb2"
            ],
            [
                "c60a157e32809b1f",
                "b29a7ab55a3476e5"
            ],
            [
                "4ed8bcf218333395"
            ]
        ]
    },
    {
        "id": "c60a157e32809b1f",
        "type": "switch",
        "z": "cbd68ba9caa96a3d",
        "g": "1f88f9981ae4ba5f",
        "name": "theme",
        "property": "payload.theme",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "tribal",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "spooky",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "jolly",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 4,
        "x": 850,
        "y": 600,
        "wires": [
            [
                "6a4e3c8d5c47d1b7"
            ],
            [
                "e0a9d45fbfcb3532"
            ],
            [
                "758cfea08b622975"
            ],
            [
                "b8723d53ddad808a"
            ]
        ]
    },
    {
        "id": "805a96f9c1561bcd",
        "type": "link in",
        "z": "cbd68ba9caa96a3d",
        "g": "1f88f9981ae4ba5f",
        "name": "lighting",
        "links": [
            "60f145bb0461c216"
        ],
        "x": 575,
        "y": 620,
        "wires": [
            [
                "0156a364439561a8"
            ]
        ]
    },
    {
        "id": "ba94cc02344092b6",
        "type": "switch",
        "z": "cbd68ba9caa96a3d",
        "g": "fde389905b8f6545",
        "name": "time",
        "property": "payload.time",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "morning",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "midday",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "afternoon",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "evening",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "night",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 5,
        "x": 170,
        "y": 620,
        "wires": [
            [
                "5ec89823b4e8d3aa"
            ],
            [
                "cb25d319d7126480"
            ],
            [
                "c633c043693d29f4"
            ],
            [
                "fc34e1d6c55a3985"
            ],
            [
                "0b72197569340d63"
            ]
        ],
        "inputLabels": [
            "suncalc"
        ],
        "outputLabels": [
            "morning",
            "midday",
            "afternoon",
            "evening",
            "night"
        ]
    },
    {
        "id": "5ec89823b4e8d3aa",
        "type": "link out",
        "z": "cbd68ba9caa96a3d",
        "g": "fde389905b8f6545",
        "name": "morning",
        "mode": "link",
        "links": [
            "cab89ebfeca22623"
        ],
        "x": 295,
        "y": 540,
        "wires": []
    },
    {
        "id": "cb25d319d7126480",
        "type": "link out",
        "z": "cbd68ba9caa96a3d",
        "g": "fde389905b8f6545",
        "name": "midday",
        "mode": "link",
        "links": [
            "4d9c62d6c2145813"
        ],
        "x": 295,
        "y": 580,
        "wires": []
    },
    {
        "id": "c633c043693d29f4",
        "type": "link out",
        "z": "cbd68ba9caa96a3d",
        "g": "fde389905b8f6545",
        "name": "afternoon",
        "mode": "link",
        "links": [
            "3fa2af1c1f32f8ee"
        ],
        "x": 295,
        "y": 620,
        "wires": []
    },
    {
        "id": "fc34e1d6c55a3985",
        "type": "link out",
        "z": "cbd68ba9caa96a3d",
        "g": "fde389905b8f6545",
        "name": "evening",
        "mode": "link",
        "links": [
            "4d9c62d6c2145813"
        ],
        "x": 295,
        "y": 660,
        "wires": []
    },
    {
        "id": "0b72197569340d63",
        "type": "link out",
        "z": "cbd68ba9caa96a3d",
        "g": "fde389905b8f6545",
        "name": "night",
        "mode": "link",
        "links": [
            "71f42f61777d49d9"
        ],
        "x": 295,
        "y": 700,
        "wires": []
    },
    {
        "id": "aafc4027ba2b619f",
        "type": "link in",
        "z": "cbd68ba9caa96a3d",
        "g": "fde389905b8f6545",
        "name": "shades",
        "links": [
            "60f145bb0461c216"
        ],
        "x": 75,
        "y": 620,
        "wires": [
            [
                "ba94cc02344092b6"
            ]
        ]
    },
    {
        "id": "b2c19560f9da088a",
        "type": "function",
        "z": "cbd68ba9caa96a3d",
        "g": "8a031cfeade40a06",
        "name": "daily",
        "func": "/*global suncalc*/\n\nconst date = new Date()\n\n////////////////////////////////////////////////////////////////\n// sunrise, sunset\n\nconst latitude = env.get('LATITUDE')\nconst longitude = env.get('LONGITUDE')\nconst times = suncalc.getTimes(date, latitude, longitude)\nconst start = times.sunrise.getTime()\nconst end = times.sunset.getTime()\n\nconst payload = {\n    sunrise: start,\n    sunset: end,\n    zenith: {}\n}\n\n////////////////////////////////////////////////////////////////\n// midday, afternoon\n\nfor (let minute = start; minute < end; minute += 60000) {\n\n    const d = new Date(minute)\n    const current = payload.zenith.altitude || -100\n    const position = suncalc.getPosition(d, latitude, longitude)\n\n    if (position.altitude > current) {\n\n        payload.zenith = {\n            altitude: position.altitude,\n            azimuth: position.azimuth,\n            time: minute\n        }\n    }\n}\n\nconst offset = 7200000\npayload.midday = payload.zenith.time - offset\npayload.afternoon = payload.zenith.time + offset\n\n////////////////////////////////////////////////////////////////\n// bedtime\n\ndate.setHours(22, 0, 0, 0)\n\nconst bedtime = 1800000 - Math.floor(Math.random() * 3600000)\n\npayload.bedtime = bedtime + date.getTime()\n\nif (payload.bedtime < payload.sunset) {\n\n    payload.bedtime = payload.sunset + 1800000\n\n}\n\n////////////////////////////////////////////////////////////////\n// theme\n\nconst month = date.getMonth() + 1\nconst day = date.getDate()\n\nif (month == 7 && day <= 4) {\n\n    payload.theme = 'tribal'\n\n} else if (month == 10) {\n\n    payload.theme = 'spooky'\n\n} else if (month == 12) {\n\n    payload.theme = 'jolly'\n\n} else {\n\n    payload.theme = 'standard'\n\n}\n\n////////////////////////////////////////////////////////////////\n\nmsg.payload = payload\nmsg.topic = 'daily'\n\nnode.status({\n    text: new Date(msg.payload.bedtime).toLocaleTimeString(),\n    shape: 'dot',\n    fill: 'blue'\n})\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "suncalc",
                "module": "suncalc"
            }
        ],
        "x": 310,
        "y": 80,
        "wires": [
            [
                "c9d02aeed7d0407f"
            ]
        ]
    },
    {
        "id": "a0c7d328b5287989",
        "type": "inject",
        "z": "cbd68ba9caa96a3d",
        "g": "8a031cfeade40a06",
        "name": "at start",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 60,
        "wires": [
            [
                "b2c19560f9da088a"
            ]
        ]
    },
    {
        "id": "8c6c3c20f5958599",
        "type": "inject",
        "z": "cbd68ba9caa96a3d",
        "g": "8a031cfeade40a06",
        "name": "every morning",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "00 04 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 100,
        "wires": [
            [
                "b2c19560f9da088a"
            ]
        ]
    },
    {
        "id": "a0b61336a93a4089",
        "type": "inject",
        "z": "cbd68ba9caa96a3d",
        "g": "8a031cfeade40a06",
        "name": "every minute",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "now",
        "payload": "",
        "payloadType": "date",
        "x": 280,
        "y": 160,
        "wires": [
            [
                "c9d02aeed7d0407f"
            ]
        ]
    },
    {
        "id": "c9d02aeed7d0407f",
        "type": "join",
        "z": "cbd68ba9caa96a3d",
        "g": "8a031cfeade40a06",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": true,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 450,
        "y": 120,
        "wires": [
            [
                "d534f07cf7c1eb0b"
            ]
        ]
    },
    {
        "id": "d534f07cf7c1eb0b",
        "type": "function",
        "z": "cbd68ba9caa96a3d",
        "g": "8a031cfeade40a06",
        "name": "now",
        "func": "/*global suncalc*/\n\nconst date = new Date(msg.payload.now)\nconst latitude = env.get('LATITUDE')\nconst longitude = env.get('LONGITUDE')\nconst position = suncalc.getPosition(date, latitude, longitude)\n\nconst payload = {\n    now: msg.payload.now,\n    altitude: position.altitude,\n    azimuth: position.azimuth\n}\n\nfor (let key in msg.payload.daily) {\n\n    payload[key] = msg.payload.daily[key]\n\n}\n\nif (payload.now > payload.sunrise && payload.now < payload.bedtime) {\n\n    if (payload.now < payload.midday) {\n\n        payload.time = 'morning'\n\n    } else if (payload.now < payload.afternoon) {\n\n        payload.time = 'midday'\n\n    } else if (payload.now < payload.sunset) {\n\n        payload.time = 'afternoon'\n\n    } else {\n\n        payload.time = 'evening'\n\n    }\n\n} else {\n\n    payload.time = 'night'\n\n}\n\nnode.status({\n    text: payload.time,\n    shape: 'dot',\n    fill: 'blue'\n})\n\n/**\n* @param {string} topic\n* @param {{ [x: string]: any; now?: any; altitude?: any; azimuth?: any; }} payload\n* @param {{ topic: string; payload: any; qos: number; retain: boolean; }[]} msgs\n*/\nfunction splitPayload(topic, payload, msgs) {\n\n    for (let key in payload) {\n\n        const value = payload[key]\n\n        if ((typeof value) == 'object') {\n\n            msgs = msgs.concat(splitPayload(topic + key + '/', value, []))\n\n        } else {\n\n            msgs.push({\n                topic: topic + key,\n                payload: value\n            })\n        }\n    }\n\n    return msgs\n\n}\n\nconst msgs = splitPayload('', payload, [])\n\nreturn [msgs]",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "suncalc",
                "module": "suncalc"
            }
        ],
        "x": 570,
        "y": 120,
        "wires": [
            [
                "b709b48ce2961f8e"
            ]
        ]
    },
    {
        "id": "b709b48ce2961f8e",
        "type": "rbe",
        "z": "cbd68ba9caa96a3d",
        "g": "8a031cfeade40a06",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 690,
        "y": 120,
        "wires": [
            [
                "47875e1be48bbf82"
            ]
        ]
    },
    {
        "id": "47875e1be48bbf82",
        "type": "change",
        "z": "cbd68ba9caa96a3d",
        "g": "8a031cfeade40a06",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "'nodered/automation/' & topic",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "qos",
                "pt": "msg",
                "to": "2",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "retain",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 840,
        "y": 120,
        "wires": [
            [
                "ff64f46de7793f7b"
            ]
        ]
    },
    {
        "id": "ff64f46de7793f7b",
        "type": "link out",
        "z": "cbd68ba9caa96a3d",
        "g": "8a031cfeade40a06",
        "name": "send to broker",
        "mode": "link",
        "links": [
            "dd7609e91ad64f63"
        ],
        "x": 955,
        "y": 120,
        "wires": []
    },
    {
        "id": "784c9929fe789981",
        "type": "change",
        "z": "cbd68ba9caa96a3d",
        "g": "98cf3b8910bc4f22",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "$substringAfter(topic, 'nodered/automation/')",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 410,
        "y": 320,
        "wires": [
            [
                "485df563c6545698"
            ]
        ]
    },
    {
        "id": "6272a0d1ddf8807b",
        "type": "mqtt in",
        "z": "cbd68ba9caa96a3d",
        "g": "98cf3b8910bc4f22",
        "name": "",
        "topic": "nodered/automation/time",
        "qos": "2",
        "datatype": "utf8",
        "broker": "722d62f3b93039c3",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 170,
        "y": 260,
        "wires": [
            [
                "784c9929fe789981"
            ]
        ]
    },
    {
        "id": "2a94995efda1937e",
        "type": "mqtt in",
        "z": "cbd68ba9caa96a3d",
        "g": "98cf3b8910bc4f22",
        "name": "",
        "topic": "nodered/automation/theme",
        "qos": "2",
        "datatype": "utf8",
        "broker": "722d62f3b93039c3",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 170,
        "y": 320,
        "wires": [
            [
                "784c9929fe789981"
            ]
        ]
    },
    {
        "id": "14e5342cb50f366f",
        "type": "link out",
        "z": "c7141ffb22d64190",
        "g": "70e9b8db12799d18",
        "name": "return from chez nous main api",
        "mode": "return",
        "links": [],
        "x": 355,
        "y": 180,
        "wires": []
    },
    {
        "id": "7df3e5fbd6e9aa8a",
        "type": "link in",
        "z": "c7141ffb22d64190",
        "g": "70e9b8db12799d18",
        "name": "send to chez nous main",
        "links": [],
        "x": 95,
        "y": 180,
        "wires": [
            [
                "3b5ab296575b53d4"
            ]
        ],
        "outputLabels": [
            "topic = uri, payload = body, method = HTTP request type"
        ]
    },
    {
        "id": "3b5ab296575b53d4",
        "type": "subflow:5785c8d9f39df67e",
        "z": "c7141ffb22d64190",
        "g": "70e9b8db12799d18",
        "name": "",
        "env": [
            {
                "name": "ADDRESS",
                "value": "CHEZ_NOUS_MAIN_ADDRESS",
                "type": "env"
            },
            {
                "name": "KEY",
                "value": "CHEZ_NOUS_MAIN_KEY",
                "type": "env"
            }
        ],
        "x": 230,
        "y": 180,
        "wires": [
            [
                "14e5342cb50f366f"
            ]
        ]
    },
    {
        "id": "51bce99c75aa12c6",
        "type": "inject",
        "z": "c7141ffb22d64190",
        "g": "290b83ef8e01ae0f",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 80,
        "wires": [
            [
                "73a1ec5ed8ebc167"
            ]
        ]
    },
    {
        "id": "f3ab10cd192709b0",
        "type": "debug",
        "z": "c7141ffb22d64190",
        "g": "290b83ef8e01ae0f",
        "name": "chez nous main application key",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "payload",
        "statusType": "msg",
        "x": 630,
        "y": 80,
        "wires": []
    },
    {
        "id": "73a1ec5ed8ebc167",
        "type": "subflow:75bc72a16c4da2c8",
        "z": "c7141ffb22d64190",
        "g": "290b83ef8e01ae0f",
        "name": "",
        "env": [
            {
                "name": "ADDRESS",
                "value": "CHEZ_NOUS_MAIN_ADDRESS",
                "type": "env"
            },
            {
                "name": "USERNAME",
                "value": "nodered#cheznous",
                "type": "str"
            }
        ],
        "x": 360,
        "y": 80,
        "wires": [
            [
                "f3ab10cd192709b0"
            ]
        ]
    },
    {
        "id": "4d2dc9a6e42d0548",
        "type": "link out",
        "z": "c7141ffb22d64190",
        "g": "665df9d682462b5e",
        "name": "send to broker",
        "mode": "link",
        "links": [
            "dd7609e91ad64f63"
        ],
        "x": 675,
        "y": 280,
        "wires": []
    },
    {
        "id": "2d0604f94ef7bff4",
        "type": "inject",
        "z": "c7141ffb22d64190",
        "g": "665df9d682462b5e",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            },
            {
                "p": "method",
                "v": "GET",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "2",
        "topic": "resource",
        "payload": "",
        "payloadType": "str",
        "x": 160,
        "y": 300,
        "wires": [
            [
                "8c9d79d2791e9b02"
            ]
        ]
    },
    {
        "id": "8c9d79d2791e9b02",
        "type": "link call",
        "z": "c7141ffb22d64190",
        "g": "665df9d682462b5e",
        "name": "",
        "links": [
            "7df3e5fbd6e9aa8a"
        ],
        "timeout": "30",
        "x": 350,
        "y": 300,
        "wires": [
            [
                "7d283a2fc0d30093"
            ]
        ]
    },
    {
        "id": "7d283a2fc0d30093",
        "type": "subflow:4e89e7c952d56c09",
        "z": "c7141ffb22d64190",
        "g": "665df9d682462b5e",
        "name": "",
        "env": [
            {
                "name": "ADDRESS",
                "value": "CHEZ_NOUS_MAIN_ADDRESS",
                "type": "env"
            },
            {
                "name": "KEY",
                "value": "CHEZ_NOUS_MAIN_KEY",
                "type": "env"
            },
            {
                "name": "TOPIC",
                "value": "CHEZ_NOUS_MAIN_TOPIC",
                "type": "env"
            }
        ],
        "x": 560,
        "y": 300,
        "wires": [
            [
                "4d2dc9a6e42d0548"
            ],
            [
                "66730b89492663ed"
            ]
        ]
    },
    {
        "id": "df7392117105107f",
        "type": "link out",
        "z": "c7141ffb22d64190",
        "g": "9c46129d149ab201",
        "name": "return from basement hue api",
        "mode": "return",
        "links": [],
        "x": 355,
        "y": 580,
        "wires": []
    },
    {
        "id": "df79272de1bce7c1",
        "type": "link in",
        "z": "c7141ffb22d64190",
        "g": "9c46129d149ab201",
        "name": "send to basement hue",
        "links": [],
        "x": 95,
        "y": 580,
        "wires": [
            [
                "0ceb59ac89fb79b7"
            ]
        ],
        "outputLabels": [
            "topic = uri, payload = body, method = HTTP request type"
        ]
    },
    {
        "id": "0ceb59ac89fb79b7",
        "type": "subflow:5785c8d9f39df67e",
        "z": "c7141ffb22d64190",
        "g": "9c46129d149ab201",
        "name": "",
        "env": [
            {
                "name": "ADDRESS",
                "value": "BASEMENT_HUE_ADDRESS",
                "type": "env"
            },
            {
                "name": "KEY",
                "value": "BASEMENT_HUE_KEY",
                "type": "env"
            }
        ],
        "x": 230,
        "y": 580,
        "wires": [
            [
                "df7392117105107f"
            ]
        ]
    },
    {
        "id": "497b08f40cd0b29c",
        "type": "inject",
        "z": "c7141ffb22d64190",
        "g": "648ad874a33c7973",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 480,
        "wires": [
            [
                "7639b738a201d7c6"
            ]
        ]
    },
    {
        "id": "9bcb520fd937694d",
        "type": "debug",
        "z": "c7141ffb22d64190",
        "g": "648ad874a33c7973",
        "name": "basement hue application key",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "payload[0].success.username",
        "statusType": "msg",
        "x": 630,
        "y": 480,
        "wires": []
    },
    {
        "id": "7639b738a201d7c6",
        "type": "subflow:75bc72a16c4da2c8",
        "z": "c7141ffb22d64190",
        "g": "648ad874a33c7973",
        "name": "",
        "env": [
            {
                "name": "ADDRESS",
                "value": "BASEMENT_HUE_ADDRESS",
                "type": "env"
            },
            {
                "name": "USERNAME",
                "value": "nodered#cheznous",
                "type": "str"
            }
        ],
        "x": 360,
        "y": 480,
        "wires": [
            [
                "9bcb520fd937694d"
            ]
        ]
    },
    {
        "id": "1209a8480a23b591",
        "type": "link out",
        "z": "c7141ffb22d64190",
        "g": "0fc22be05cfc5241",
        "name": "send to broker",
        "mode": "link",
        "links": [
            "dd7609e91ad64f63"
        ],
        "x": 655,
        "y": 680,
        "wires": []
    },
    {
        "id": "14944e047cba03fa",
        "type": "link call",
        "z": "c7141ffb22d64190",
        "g": "0fc22be05cfc5241",
        "name": "",
        "links": [
            "df79272de1bce7c1"
        ],
        "timeout": "30",
        "x": 340,
        "y": 700,
        "wires": [
            [
                "a5f013472e32f50c"
            ]
        ]
    },
    {
        "id": "5e2f8ae74b053fc9",
        "type": "inject",
        "z": "c7141ffb22d64190",
        "g": "0fc22be05cfc5241",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            },
            {
                "p": "method",
                "v": "GET",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "3",
        "topic": "resource",
        "payload": "",
        "payloadType": "str",
        "x": 160,
        "y": 700,
        "wires": [
            [
                "14944e047cba03fa"
            ]
        ]
    },
    {
        "id": "a5f013472e32f50c",
        "type": "subflow:4e89e7c952d56c09",
        "z": "c7141ffb22d64190",
        "g": "0fc22be05cfc5241",
        "name": "",
        "env": [
            {
                "name": "ADDRESS",
                "value": "BASEMENT_HUE_ADDRESS",
                "type": "env"
            },
            {
                "name": "KEY",
                "value": "BASEMENT_HUE_KEY",
                "type": "env"
            },
            {
                "name": "TOPIC",
                "value": "BASEMENT_HUE_TOPIC",
                "type": "env"
            }
        ],
        "x": 540,
        "y": 700,
        "wires": [
            [
                "1209a8480a23b591"
            ],
            [
                "65911d8f953e99bf"
            ]
        ]
    },
    {
        "id": "66730b89492663ed",
        "type": "link out",
        "z": "c7141ffb22d64190",
        "g": "665df9d682462b5e",
        "name": "chez nous main metadata",
        "mode": "link",
        "links": [
            "45df49432927ee81",
            "c19f87c7eda22e58"
        ],
        "x": 675,
        "y": 320,
        "wires": []
    },
    {
        "id": "65911d8f953e99bf",
        "type": "link out",
        "z": "c7141ffb22d64190",
        "g": "0fc22be05cfc5241",
        "name": "basement hue metadata",
        "mode": "link",
        "links": [
            "12dd9f03494a1dc5",
            "e9f56188d7a72ce9",
            "09ca011e26f258fb"
        ],
        "x": 655,
        "y": 720,
        "wires": []
    },
    {
        "id": "1cee4f351bd59563",
        "type": "debug",
        "z": "1cf0490e7de2f93d",
        "g": "cccd3d3ae4af3207",
        "name": "powerview scenes",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 610,
        "y": 720,
        "wires": []
    },
    {
        "id": "2f6cc09457939ce2",
        "type": "subflow:9c4e4702e4660adf",
        "z": "1cf0490e7de2f93d",
        "g": "87285e6bf01cff03",
        "name": "",
        "env": [
            {
                "name": "ADDRESS",
                "value": "POWERVIEW_ADDRESS",
                "type": "env"
            }
        ],
        "x": 300,
        "y": 60,
        "wires": [
            [
                "618e79a58ab8143a"
            ]
        ]
    },
    {
        "id": "7173aa38c9fa93dc",
        "type": "link in",
        "z": "1cf0490e7de2f93d",
        "g": "87285e6bf01cff03",
        "name": "activate powerview scene",
        "links": [
            "9f3d946a03de6aa8",
            "676c095bc7abab1e",
            "92a8459af7433d08",
            "d6caf0385ddcc934"
        ],
        "x": 155,
        "y": 60,
        "wires": [
            [
                "2f6cc09457939ce2"
            ]
        ]
    },
    {
        "id": "618e79a58ab8143a",
        "type": "link out",
        "z": "1cf0490e7de2f93d",
        "g": "87285e6bf01cff03",
        "name": "return from set powerview scene",
        "mode": "return",
        "links": [],
        "x": 435,
        "y": 60,
        "wires": []
    },
    {
        "id": "69a6db45ef9f6fdf",
        "type": "inject",
        "z": "1cf0490e7de2f93d",
        "g": "cccd3d3ae4af3207",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "rooms",
        "payload": "",
        "payloadType": "str",
        "x": 220,
        "y": 560,
        "wires": [
            [
                "4a774d5487ebaf6f"
            ]
        ]
    },
    {
        "id": "18b035d175d78813",
        "type": "function",
        "z": "1cf0490e7de2f93d",
        "g": "cccd3d3ae4af3207",
        "name": "mergeMetadata",
        "func": "let findRoomName = (/** @type {string} */ id) => {\n    \n    for (let index = 0; index < msg.rooms.length; ++index) {\n\n        let room = msg.rooms[index]\n        \n        if (room.id == id) {\n            \n            return room.name\n            \n        }\n    }\n    \n    node.warn('no room found with id ' + id)\n    return null\n}\n\nlet metadata = msg.payload.map((/** @type {{ roomId: any; sceneName: string; sceneId: any; }} */ scene) => {\n    \n    let roomName = findRoomName(scene.roomId)\n    \n    node.status({\n        text: roomName + ' | ' + scene.sceneName,\n        shape: 'dot',\n        fill: 'blue'\n    })\n\n    return {\n        sceneId: scene.sceneId,\n        sceneName: scene.sceneName,\n        roomId: scene.roomId,\n        roomName: roomName\n    }\n})\n\nflow.set('metadata', metadata)\n\nmsg.payload = metadata\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 720,
        "wires": [
            [
                "1cee4f351bd59563"
            ]
        ]
    },
    {
        "id": "9d0fb43b1d0b583f",
        "type": "change",
        "z": "1cf0490e7de2f93d",
        "g": "cccd3d3ae4af3207",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "$map(payload.sceneData, function($scene) {\t    {\t        \"sceneName\": $base64decode($scene.name),\t        \"sceneId\": $scene.id,\t        \"roomId\": $scene.roomId\t    }\t})",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 240,
        "y": 720,
        "wires": [
            [
                "18b035d175d78813"
            ]
        ]
    },
    {
        "id": "837774c682b93af9",
        "type": "subflow:4920eed654c67f8d",
        "z": "1cf0490e7de2f93d",
        "g": "cccd3d3ae4af3207",
        "name": "Get PowerVIew Scenes",
        "env": [
            {
                "name": "ADDRESS",
                "value": "POWERVIEW_ADDRESS",
                "type": "env"
            }
        ],
        "x": 450,
        "y": 640,
        "wires": [
            [
                "9d0fb43b1d0b583f"
            ]
        ]
    },
    {
        "id": "42529821fe2b55cd",
        "type": "change",
        "z": "1cf0490e7de2f93d",
        "g": "cccd3d3ae4af3207",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "rooms",
                "pt": "msg",
                "to": "$map(payload.roomData, function($room) {\t    {\t        \"name\": $base64decode($room.name),\t        \"id\": $room.id\t    }\t})",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "scenes",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 240,
        "y": 640,
        "wires": [
            [
                "837774c682b93af9"
            ]
        ]
    },
    {
        "id": "4a774d5487ebaf6f",
        "type": "subflow:4920eed654c67f8d",
        "z": "1cf0490e7de2f93d",
        "g": "cccd3d3ae4af3207",
        "name": "Get PowerVIew Rooms",
        "env": [
            {
                "name": "ADDRESS",
                "value": "POWERVIEW_ADDRESS",
                "type": "env"
            }
        ],
        "x": 410,
        "y": 560,
        "wires": [
            [
                "42529821fe2b55cd"
            ]
        ]
    },
    {
        "id": "71f42f61777d49d9",
        "type": "link in",
        "z": "1cf0490e7de2f93d",
        "g": "0770b0ba393f379d",
        "name": "close all shades",
        "links": [
            "08388db8f103b3a6",
            "fa1ec72a4270321c",
            "4a69e032bf396637",
            "0b72197569340d63"
        ],
        "x": 155,
        "y": 160,
        "wires": [
            [
                "5db5ebf66b1cf16b"
            ]
        ]
    },
    {
        "id": "af010737ecd1f8d6",
        "type": "link call",
        "z": "1cf0490e7de2f93d",
        "g": "0770b0ba393f379d",
        "name": "",
        "links": [
            "7173aa38c9fa93dc"
        ],
        "timeout": "30",
        "x": 570,
        "y": 160,
        "wires": [
            [
                "516be0577e70437c"
            ]
        ]
    },
    {
        "id": "edec482fa879717d",
        "type": "link call",
        "z": "1cf0490e7de2f93d",
        "g": "0770b0ba393f379d",
        "name": "",
        "links": [
            "7173aa38c9fa93dc"
        ],
        "timeout": "30",
        "x": 1070,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "4d9c62d6c2145813",
        "type": "link in",
        "z": "1cf0490e7de2f93d",
        "g": "746733f8c81b5ccd",
        "name": "open all shades",
        "links": [
            "852b9ed1563a9966",
            "83801674771348bb",
            "cbfb68d15d64faa7",
            "7bb24887e8a01399",
            "06d9f4b53b9bbb6e",
            "5a5a3cf0e990c640",
            "cb25d319d7126480",
            "fc34e1d6c55a3985"
        ],
        "x": 155,
        "y": 260,
        "wires": [
            [
                "18709dea4106ee7e"
            ]
        ]
    },
    {
        "id": "1b984be8838e6815",
        "type": "link call",
        "z": "1cf0490e7de2f93d",
        "g": "746733f8c81b5ccd",
        "name": "",
        "links": [
            "7173aa38c9fa93dc"
        ],
        "timeout": "30",
        "x": 570,
        "y": 260,
        "wires": [
            [
                "7bc062570484d12c"
            ]
        ]
    },
    {
        "id": "1b49d418ac1d553d",
        "type": "link call",
        "z": "1cf0490e7de2f93d",
        "g": "746733f8c81b5ccd",
        "name": "",
        "links": [
            "7173aa38c9fa93dc"
        ],
        "timeout": "30",
        "x": 1070,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "3fa2af1c1f32f8ee",
        "type": "link in",
        "z": "1cf0490e7de2f93d",
        "g": "e961376bbef01556",
        "name": "open east shades",
        "links": [
            "1cd05bf9545f7fd2",
            "74ebd31c8bede749",
            "28eacfa3cb120cc6",
            "c633c043693d29f4"
        ],
        "x": 155,
        "y": 360,
        "wires": [
            [
                "3849c71599f44bc7"
            ]
        ]
    },
    {
        "id": "407f68edfd369a25",
        "type": "link call",
        "z": "1cf0490e7de2f93d",
        "g": "e961376bbef01556",
        "name": "",
        "links": [
            "7173aa38c9fa93dc"
        ],
        "timeout": "30",
        "x": 570,
        "y": 360,
        "wires": [
            [
                "bdce740848b412c8"
            ]
        ]
    },
    {
        "id": "59f2f3b92b79087e",
        "type": "link call",
        "z": "1cf0490e7de2f93d",
        "g": "e961376bbef01556",
        "name": "",
        "links": [
            "7173aa38c9fa93dc"
        ],
        "timeout": "30",
        "x": 1070,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "cab89ebfeca22623",
        "type": "link in",
        "z": "1cf0490e7de2f93d",
        "g": "56e03f40c1727182",
        "name": "open west shades",
        "links": [
            "5938d52c5b7dff7f",
            "2cec2cb027e18141",
            "f5ee7979f10b51f4",
            "5ec89823b4e8d3aa"
        ],
        "x": 155,
        "y": 460,
        "wires": [
            [
                "5cdf5a1ca6546850"
            ]
        ]
    },
    {
        "id": "c906095c1f350eda",
        "type": "link call",
        "z": "1cf0490e7de2f93d",
        "g": "56e03f40c1727182",
        "name": "",
        "links": [
            "7173aa38c9fa93dc"
        ],
        "timeout": "30",
        "x": 570,
        "y": 460,
        "wires": [
            [
                "b56bca504084bf91"
            ]
        ]
    },
    {
        "id": "e8a3ad681677753f",
        "type": "link call",
        "z": "1cf0490e7de2f93d",
        "g": "56e03f40c1727182",
        "name": "",
        "links": [
            "7173aa38c9fa93dc"
        ],
        "timeout": "30",
        "x": 1070,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "5db5ebf66b1cf16b",
        "type": "subflow:60301f96c2ad2e7c",
        "z": "1cf0490e7de2f93d",
        "g": "0770b0ba393f379d",
        "name": "Close Dining Room Shades",
        "env": [
            {
                "name": "NAME",
                "value": "Close Dining Room Shades",
                "type": "str"
            }
        ],
        "x": 320,
        "y": 160,
        "wires": [
            [
                "af010737ecd1f8d6"
            ]
        ]
    },
    {
        "id": "516be0577e70437c",
        "type": "subflow:60301f96c2ad2e7c",
        "z": "1cf0490e7de2f93d",
        "g": "0770b0ba393f379d",
        "name": "Close Living Room Shades",
        "env": [
            {
                "name": "NAME",
                "value": "Close Living Room Shades",
                "type": "str"
            }
        ],
        "x": 820,
        "y": 160,
        "wires": [
            [
                "edec482fa879717d"
            ]
        ]
    },
    {
        "id": "18709dea4106ee7e",
        "type": "subflow:60301f96c2ad2e7c",
        "z": "1cf0490e7de2f93d",
        "g": "746733f8c81b5ccd",
        "name": "Open Dining Room Shades",
        "env": [
            {
                "name": "NAME",
                "value": "Open Dining Room Shades",
                "type": "str"
            }
        ],
        "x": 320,
        "y": 260,
        "wires": [
            [
                "1b984be8838e6815"
            ]
        ]
    },
    {
        "id": "7bc062570484d12c",
        "type": "subflow:60301f96c2ad2e7c",
        "z": "1cf0490e7de2f93d",
        "g": "746733f8c81b5ccd",
        "name": "Open Living Room Shades",
        "env": [
            {
                "name": "NAME",
                "value": "Open Living Room Shades",
                "type": "str"
            }
        ],
        "x": 820,
        "y": 260,
        "wires": [
            [
                "1b49d418ac1d553d"
            ]
        ]
    },
    {
        "id": "3849c71599f44bc7",
        "type": "subflow:60301f96c2ad2e7c",
        "z": "1cf0490e7de2f93d",
        "g": "e961376bbef01556",
        "name": "Open Dining Room Shades",
        "env": [
            {
                "name": "NAME",
                "value": "Open Dining Room Shades",
                "type": "str"
            }
        ],
        "x": 320,
        "y": 360,
        "wires": [
            [
                "407f68edfd369a25"
            ]
        ]
    },
    {
        "id": "bdce740848b412c8",
        "type": "subflow:60301f96c2ad2e7c",
        "z": "1cf0490e7de2f93d",
        "g": "e961376bbef01556",
        "name": "Close Living Room Shades",
        "env": [
            {
                "name": "NAME",
                "value": "Close Living Room Shades",
                "type": "str"
            }
        ],
        "x": 820,
        "y": 360,
        "wires": [
            [
                "59f2f3b92b79087e"
            ]
        ]
    },
    {
        "id": "5cdf5a1ca6546850",
        "type": "subflow:60301f96c2ad2e7c",
        "z": "1cf0490e7de2f93d",
        "g": "56e03f40c1727182",
        "name": "Close Dining Room Shades",
        "env": [
            {
                "name": "NAME",
                "value": "Close Dining Room Shades",
                "type": "str"
            }
        ],
        "x": 320,
        "y": 460,
        "wires": [
            [
                "c906095c1f350eda"
            ]
        ]
    },
    {
        "id": "b56bca504084bf91",
        "type": "subflow:60301f96c2ad2e7c",
        "z": "1cf0490e7de2f93d",
        "g": "56e03f40c1727182",
        "name": "Open Living Room Shades",
        "env": [
            {
                "name": "NAME",
                "value": "Open Living Room Shades",
                "type": "str"
            }
        ],
        "x": 820,
        "y": 460,
        "wires": [
            [
                "e8a3ad681677753f"
            ]
        ]
    },
    {
        "id": "07ccb0b07e6fada8",
        "type": "link in",
        "z": "e44149a93fbe9b1b",
        "g": "1ce03cecd5db8bc6",
        "name": "main floor off",
        "links": [
            "981dbc2364b09d66",
            "e53fa5ad2c0bc25a",
            "23eec62f6bec1030",
            "5950aa6c0df32eb2"
        ],
        "x": 155,
        "y": 80,
        "wires": [
            [
                "ec1b9da9a2a0dde0"
            ]
        ]
    },
    {
        "id": "3ed1a4d37d1548b4",
        "type": "link in",
        "z": "e44149a93fbe9b1b",
        "g": "3483ce20c1996e6c",
        "name": "main floor nightlight",
        "links": [
            "549a2335fb839c37",
            "4c171923173c6e68",
            "b290a3d4ebcd7653",
            "4ed8bcf218333395"
        ],
        "x": 155,
        "y": 180,
        "wires": [
            [
                "1462dac4d5543f0a"
            ]
        ]
    },
    {
        "id": "53509cbc2f897eb4",
        "type": "link call",
        "z": "e44149a93fbe9b1b",
        "g": "3483ce20c1996e6c",
        "name": "",
        "links": [
            "7df3e5fbd6e9aa8a"
        ],
        "timeout": "30",
        "x": 450,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "6cae9b1ccc68cb9e",
        "type": "link in",
        "z": "e44149a93fbe9b1b",
        "g": "e1fa765ec5a5ebd7",
        "name": "main floor sunset",
        "links": [
            "2837183323a61e04",
            "b77799d3430f62c7",
            "6f67a01c3ee8a16f",
            "b29a7ab55a3476e5"
        ],
        "x": 155,
        "y": 280,
        "wires": [
            [
                "76f3eb6c53a0310c"
            ]
        ]
    },
    {
        "id": "8ae7ee0c87df1191",
        "type": "link call",
        "z": "e44149a93fbe9b1b",
        "g": "e1fa765ec5a5ebd7",
        "name": "",
        "links": [
            "7df3e5fbd6e9aa8a"
        ],
        "timeout": "30",
        "x": 430,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "ec1b9da9a2a0dde0",
        "type": "change",
        "z": "e44149a93fbe9b1b",
        "g": "1ce03cecd5db8bc6",
        "name": "turn off",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "resource/grouped_light/9c1c7975-2f47-4552-bac8-c19b643cd678",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"on\":{\"on\":false}}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "method",
                "pt": "msg",
                "to": "PUT",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 250,
        "y": 80,
        "wires": [
            [
                "33533dc0ac4ff870"
            ]
        ]
    },
    {
        "id": "33533dc0ac4ff870",
        "type": "link call",
        "z": "e44149a93fbe9b1b",
        "g": "1ce03cecd5db8bc6",
        "name": "",
        "links": [
            "7df3e5fbd6e9aa8a"
        ],
        "timeout": "30",
        "x": 430,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "1462dac4d5543f0a",
        "type": "change",
        "z": "e44149a93fbe9b1b",
        "g": "3483ce20c1996e6c",
        "name": "night light",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "resource/scene/48c39b9f-1599-4a5c-b7f6-bad6cad4029a",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"recall\":{\"action\":\"active\"}}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "method",
                "pt": "msg",
                "to": "PUT",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 260,
        "y": 180,
        "wires": [
            [
                "53509cbc2f897eb4"
            ]
        ]
    },
    {
        "id": "76f3eb6c53a0310c",
        "type": "change",
        "z": "e44149a93fbe9b1b",
        "g": "e1fa765ec5a5ebd7",
        "name": "sunset",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "resource/scene/6eff0801-01e2-4803-9840-e31c06cee079",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"recall\":{\"action\":\"dynamic_palette\"}}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "method",
                "pt": "msg",
                "to": "PUT",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 250,
        "y": 280,
        "wires": [
            [
                "8ae7ee0c87df1191"
            ]
        ]
    },
    {
        "id": "08ca72b8e815a992",
        "type": "link in",
        "z": "e44149a93fbe9b1b",
        "g": "00ad2b71a9c29a21",
        "name": "main bathroom off",
        "links": [
            "e696e0a2acb678c2",
            "f597e3f10639062f",
            "ce589288779cef4a",
            "981dbc2364b09d66",
            "e53fa5ad2c0bc25a",
            "23eec62f6bec1030",
            "5950aa6c0df32eb2"
        ],
        "x": 155,
        "y": 440,
        "wires": [
            [
                "2736157993771007"
            ]
        ]
    },
    {
        "id": "2736157993771007",
        "type": "change",
        "z": "e44149a93fbe9b1b",
        "g": "00ad2b71a9c29a21",
        "name": "turn off",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"on\":{\"on\":false}}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "resource/grouped_light/aea74e74-d544-4d08-ad71-3b6665045256",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "method",
                "pt": "msg",
                "to": "PUT",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 250,
        "y": 440,
        "wires": [
            [
                "0cb4aa086519cdc3"
            ]
        ]
    },
    {
        "id": "0cb4aa086519cdc3",
        "type": "link call",
        "z": "e44149a93fbe9b1b",
        "g": "00ad2b71a9c29a21",
        "name": "",
        "links": [
            "7df3e5fbd6e9aa8a"
        ],
        "timeout": "30",
        "x": 430,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "3deabbac44606076",
        "type": "link call",
        "z": "e44149a93fbe9b1b",
        "g": "513bc529c9c10fa0",
        "name": "",
        "links": [
            "7df3e5fbd6e9aa8a"
        ],
        "timeout": "30",
        "x": 450,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "ec0f7c926936a835",
        "type": "link in",
        "z": "e44149a93fbe9b1b",
        "g": "513bc529c9c10fa0",
        "name": "main bathroom nightlight",
        "links": [
            "1fa973a7d8e65e3c",
            "549a2335fb839c37",
            "4c171923173c6e68",
            "b290a3d4ebcd7653",
            "4ed8bcf218333395"
        ],
        "x": 155,
        "y": 540,
        "wires": [
            [
                "1af873ecc08861c7"
            ]
        ]
    },
    {
        "id": "1af873ecc08861c7",
        "type": "change",
        "z": "e44149a93fbe9b1b",
        "g": "513bc529c9c10fa0",
        "name": "night light",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"recall\":{\"action\":\"active\"}}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "resource/scene/5d507fb6-89f6-459a-b327-0fffd0c6dc48",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "method",
                "pt": "msg",
                "to": "PUT",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 260,
        "y": 540,
        "wires": [
            [
                "3deabbac44606076"
            ]
        ]
    },
    {
        "id": "51e789d7146d158c",
        "type": "link call",
        "z": "e44149a93fbe9b1b",
        "g": "26622bde8cf9b262",
        "name": "",
        "links": [
            "7df3e5fbd6e9aa8a"
        ],
        "timeout": "30",
        "x": 1050,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "bcf937398010e69d",
        "type": "link in",
        "z": "e44149a93fbe9b1b",
        "g": "26622bde8cf9b262",
        "name": "yard sunset",
        "links": [
            "e270017761dfd27d",
            "2272d3c9be7a6390",
            "bbabd588c05b979f",
            "b8723d53ddad808a"
        ],
        "x": 775,
        "y": 180,
        "wires": [
            [
                "8c8685c28661026d"
            ]
        ]
    },
    {
        "id": "8c8685c28661026d",
        "type": "change",
        "z": "e44149a93fbe9b1b",
        "g": "26622bde8cf9b262",
        "name": "sunset",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "resource/scene/9b6935e2-f8ed-4f91-83a2-2bff1850da99",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"recall\":{\"action\":\"dynamic_palette\"}}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "method",
                "pt": "msg",
                "to": "PUT",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 870,
        "y": 180,
        "wires": [
            [
                "51e789d7146d158c"
            ]
        ]
    },
    {
        "id": "973da59b5e8db353",
        "type": "link call",
        "z": "e44149a93fbe9b1b",
        "g": "c083702f726a3c76",
        "name": "",
        "links": [
            "7df3e5fbd6e9aa8a"
        ],
        "timeout": "30",
        "x": 1050,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "434961afc8e6268a",
        "type": "link in",
        "z": "e44149a93fbe9b1b",
        "g": "c083702f726a3c76",
        "name": "yard jolly",
        "links": [
            "b0ee0f2f8155fe9b",
            "81221f83aad45655",
            "83b840b1c5858876",
            "758cfea08b622975"
        ],
        "x": 775,
        "y": 480,
        "wires": [
            [
                "c639897051efe373"
            ]
        ]
    },
    {
        "id": "c639897051efe373",
        "type": "change",
        "z": "e44149a93fbe9b1b",
        "g": "c083702f726a3c76",
        "name": "jolly",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "resource/scene/12571f23-7714-4b47-8e75-a3040389b788",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"recall\":{\"action\":\"dynamic_palette\"}}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "method",
                "pt": "msg",
                "to": "PUT",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 870,
        "y": 480,
        "wires": [
            [
                "973da59b5e8db353"
            ]
        ]
    },
    {
        "id": "de84c77427959f96",
        "type": "link in",
        "z": "e44149a93fbe9b1b",
        "g": "1f51b2e96d97963e",
        "name": "yard off",
        "links": [
            "549a2335fb839c37",
            "981dbc2364b09d66",
            "e53fa5ad2c0bc25a",
            "4c171923173c6e68",
            "23eec62f6bec1030",
            "b290a3d4ebcd7653",
            "5950aa6c0df32eb2",
            "4ed8bcf218333395"
        ],
        "x": 775,
        "y": 80,
        "wires": [
            [
                "f224835045d99471"
            ]
        ]
    },
    {
        "id": "f224835045d99471",
        "type": "change",
        "z": "e44149a93fbe9b1b",
        "g": "1f51b2e96d97963e",
        "name": "turn off",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"on\":{\"on\":false}}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "resource/grouped_light/bad8480b-b404-42d1-a9e7-a4a69f400971",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "method",
                "pt": "msg",
                "to": "PUT",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 870,
        "y": 80,
        "wires": [
            [
                "30ad3f93b6509f97"
            ]
        ]
    },
    {
        "id": "30ad3f93b6509f97",
        "type": "link call",
        "z": "e44149a93fbe9b1b",
        "g": "1f51b2e96d97963e",
        "name": "",
        "links": [
            "7df3e5fbd6e9aa8a"
        ],
        "timeout": "30",
        "x": 1050,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "6bc33e9277b4e511",
        "type": "link call",
        "z": "e44149a93fbe9b1b",
        "g": "73df20e8ccdbf56c",
        "name": "",
        "links": [
            "7df3e5fbd6e9aa8a"
        ],
        "timeout": "30",
        "x": 1070,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "f92a8accf963b5bf",
        "type": "link in",
        "z": "e44149a93fbe9b1b",
        "g": "73df20e8ccdbf56c",
        "name": "yard spooky",
        "links": [
            "b0ee0f2f8155fe9b",
            "c68369c3781694e3",
            "d568e31cb3452775",
            "81221f83aad45655",
            "6c4e5524b478fb31",
            "83b840b1c5858876",
            "e0a9d45fbfcb3532",
            "758cfea08b622975"
        ],
        "x": 775,
        "y": 380,
        "wires": [
            [
                "9f798cee87b95525"
            ]
        ]
    },
    {
        "id": "9f798cee87b95525",
        "type": "change",
        "z": "e44149a93fbe9b1b",
        "g": "73df20e8ccdbf56c",
        "name": "spooky",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "resource/scene/70a0a8a6-b4b7-4b24-a9cf-0ecea0f359cc",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"recall\":{\"action\":\"dynamic_palette\"}}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "method",
                "pt": "msg",
                "to": "PUT",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 880,
        "y": 380,
        "wires": [
            [
                "6bc33e9277b4e511"
            ]
        ]
    },
    {
        "id": "ccd0f26bea9262e7",
        "type": "link call",
        "z": "e44149a93fbe9b1b",
        "g": "f6597e2f37dd2636",
        "name": "",
        "links": [
            "7df3e5fbd6e9aa8a"
        ],
        "timeout": "30",
        "x": 1050,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "7ac02c6645861b20",
        "type": "link in",
        "z": "e44149a93fbe9b1b",
        "g": "f6597e2f37dd2636",
        "name": "yard tribal",
        "links": [
            "b0ee0f2f8155fe9b",
            "7ab1620c3349854b",
            "ba11519631ca9918",
            "81221f83aad45655",
            "a63ed720004a623c",
            "83b840b1c5858876",
            "6a4e3c8d5c47d1b7",
            "758cfea08b622975"
        ],
        "x": 775,
        "y": 280,
        "wires": [
            [
                "e444798d5fd55433"
            ]
        ]
    },
    {
        "id": "e444798d5fd55433",
        "type": "change",
        "z": "e44149a93fbe9b1b",
        "g": "f6597e2f37dd2636",
        "name": "tribal",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "resource/scene/c4681d32-3368-43cd-9cf1-436132521068",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"recall\":{\"action\":\"dynamic_palette\"}}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "method",
                "pt": "msg",
                "to": "PUT",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 870,
        "y": 280,
        "wires": [
            [
                "ccd0f26bea9262e7"
            ]
        ]
    },
    {
        "id": "f5c7a7580984d067",
        "type": "delay",
        "z": "6e3ca82457d27245",
        "g": "e49c9571ddd5102f",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "3",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 270,
        "y": 80,
        "wires": [
            [
                "11b2638982da0e64"
            ]
        ]
    },
    {
        "id": "11b2638982da0e64",
        "type": "mqtt out",
        "z": "6e3ca82457d27245",
        "g": "e49c9571ddd5102f",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "722d62f3b93039c3",
        "x": 410,
        "y": 80,
        "wires": []
    },
    {
        "id": "dd7609e91ad64f63",
        "type": "link in",
        "z": "6e3ca82457d27245",
        "g": "e49c9571ddd5102f",
        "name": "send to broker",
        "links": [
            "4d2dc9a6e42d0548",
            "2a3ace48408488ce",
            "ac4ea7223e34a6f8",
            "ae1f46d58671ef2d",
            "3b3c70d754a8a4d5",
            "40f1f326e5252bf8",
            "e309f9054b8afaa3",
            "cc0a0bdacb257089",
            "c33318ea5eb9ec0a",
            "d123374401361fc9",
            "e3599caac9ca8f69",
            "9632421ff2220cf7",
            "e132ff7fd9fda65d",
            "1209a8480a23b591",
            "831fb3f42898b50f",
            "08157854eff23df6",
            "ff64f46de7793f7b",
            "baa82bec436a6471"
        ],
        "x": 155,
        "y": 80,
        "wires": [
            [
                "f5c7a7580984d067"
            ]
        ]
    },
    {
        "id": "8145a71a1f26c616",
        "type": "status",
        "z": "6e3ca82457d27245",
        "g": "e49c9571ddd5102f",
        "name": "limit rate",
        "scope": [
            "f5c7a7580984d067"
        ],
        "x": 200,
        "y": 200,
        "wires": [
            [
                "1c6a7f9ae824db96"
            ]
        ]
    },
    {
        "id": "1c6a7f9ae824db96",
        "type": "change",
        "z": "6e3ca82457d27245",
        "g": "e49c9571ddd5102f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "$number(status.text)",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 360,
        "y": 200,
        "wires": [
            [
                "6db5c2fcb5fd08e3"
            ]
        ]
    },
    {
        "id": "6db5c2fcb5fd08e3",
        "type": "ui_text",
        "z": "6e3ca82457d27245",
        "g": "e49c9571ddd5102f",
        "group": "991046045b37e3ee",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "MQTT Broker Queue",
        "label": "Queue",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 560,
        "y": 200,
        "wires": []
    },
    {
        "id": "461d49b47e87e402",
        "type": "status",
        "z": "6e3ca82457d27245",
        "g": "e49c9571ddd5102f",
        "name": "mqtt out",
        "scope": [
            "11b2638982da0e64"
        ],
        "x": 200,
        "y": 140,
        "wires": [
            [
                "5ea9e057dd830d9e"
            ]
        ]
    },
    {
        "id": "5ea9e057dd830d9e",
        "type": "change",
        "z": "6e3ca82457d27245",
        "g": "e49c9571ddd5102f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "$reverse($split(status.text,'.'))[0]",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 360,
        "y": 140,
        "wires": [
            [
                "5adbc418ab39d29a"
            ]
        ]
    },
    {
        "id": "5adbc418ab39d29a",
        "type": "ui_text",
        "z": "6e3ca82457d27245",
        "g": "e49c9571ddd5102f",
        "group": "991046045b37e3ee",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "MQTT Broker Status",
        "label": "Status",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 560,
        "y": 140,
        "wires": []
    },
    {
        "id": "0888e9faa06fe4e5",
        "type": "http response",
        "z": "6e3ca82457d27245",
        "g": "f82a1f6e963f443a",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 530,
        "y": 300,
        "wires": []
    },
    {
        "id": "48da82dc3974c2b3",
        "type": "function",
        "z": "6e3ca82457d27245",
        "g": "f82a1f6e963f443a",
        "name": "response",
        "func": "const date = new Date()\nconst timestamp = '-' +\n    date.getFullYear() +\n    '-' +\n    String(date.getMonth() + 1).padStart(2, '0') +\n    '-' +\n    String(date.getDate()).padStart(2, '0')\n\nmsg.headers = {\n    'Content-Type': 'text/plain; charset=UTF-8',\n    'Content-Disposition': 'attachment; filename=\"sun-positions' + timestamp + '.csv\"'\n}\n\nmsg.payload = global.get('sun-positions')\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 300,
        "wires": [
            [
                "0888e9faa06fe4e5"
            ]
        ]
    },
    {
        "id": "a341a1a127b0fe71",
        "type": "http in",
        "z": "6e3ca82457d27245",
        "g": "f82a1f6e963f443a",
        "name": "",
        "url": "/sunpositions",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 230,
        "y": 300,
        "wires": [
            [
                "48da82dc3974c2b3"
            ]
        ]
    },
    {
        "id": "68ca4947dd6cf14e",
        "type": "function",
        "z": "6e3ca82457d27245",
        "g": "f82a1f6e963f443a",
        "name": "url",
        "func": "/*global os*/\n\nmsg.payload = 'http://' + os.hostname + '.local:1880/sunpositions'\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "os",
                "module": "os"
            }
        ],
        "x": 350,
        "y": 360,
        "wires": [
            [
                "ccc46e9ff7a15f4e"
            ]
        ]
    },
    {
        "id": "ccc46e9ff7a15f4e",
        "type": "ui_template",
        "z": "6e3ca82457d27245",
        "g": "f82a1f6e963f443a",
        "group": "8055574ccb17e8ed",
        "name": "Download CSV",
        "order": 4,
        "width": 0,
        "height": 0,
        "format": "<div style=\"width:100%;text-align:center;\">\n    <a style=\"color:white;text-decoration:none;\" href=\"{{msg.payload}}\">Download</a>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 500,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "98380b5a50270d78",
        "type": "inject",
        "z": "6e3ca82457d27245",
        "g": "f82a1f6e963f443a",
        "name": "at start",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 220,
        "y": 360,
        "wires": [
            [
                "68ca4947dd6cf14e"
            ]
        ]
    },
    {
        "id": "5f86349da8f86e61",
        "type": "function",
        "z": "6e3ca82457d27245",
        "g": "80212e6229ce755b",
        "name": "send stats",
        "func": "/*global os*/\n\nconst hostname = os.hostname()\n\n/**\n* @param {string} name\n*/\nfunction topic(name) {\n\n    return 'os/' + hostname + '/' + name\n\n}\n\n/**\n* @param {string} name\n* @param {any} value\n*/\nfunction message(name, value) {\n\n    const newMsg = RED.util.cloneMessage(msg)\n\n    newMsg.payload = value\n    newMsg.topic = topic(name)\n    newMsg.qos = 2\n    newMsg.retain = false\n    return newMsg\n\n}\n\nconst msgs = []\n\nmsgs.push(message('loadavg', os.loadavg()[0]))\nmsgs.push(message('freemem', os.freemem()))\n\nreturn [msgs]",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "os",
                "module": "os"
            }
        ],
        "x": 410,
        "y": 460,
        "wires": [
            [
                "baa82bec436a6471"
            ]
        ]
    },
    {
        "id": "de168bcd359b4aa8",
        "type": "inject",
        "z": "6e3ca82457d27245",
        "g": "80212e6229ce755b",
        "name": "every minute",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 240,
        "y": 460,
        "wires": [
            [
                "5f86349da8f86e61"
            ]
        ]
    },
    {
        "id": "baa82bec436a6471",
        "type": "link out",
        "z": "6e3ca82457d27245",
        "g": "80212e6229ce755b",
        "name": "send to broker",
        "mode": "link",
        "links": [
            "dd7609e91ad64f63"
        ],
        "x": 515,
        "y": 460,
        "wires": []
    },
    {
        "id": "c27168b168847790",
        "type": "ui_chart",
        "z": "b12fd38c090c51f2",
        "g": "b438e0cbd64ef6ce",
        "name": "Sun Position",
        "group": "8055574ccb17e8ed",
        "order": 3,
        "width": "6",
        "height": "6",
        "label": "",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "-3.14159",
        "ymax": "3.14159",
        "removeOlder": 1,
        "removeOlderPoints": "1000",
        "removeOlderUnit": "86400",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 610,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "3a39c550369bac31",
        "type": "inject",
        "z": "b12fd38c090c51f2",
        "g": "b438e0cbd64ef6ce",
        "name": "at start",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 80,
        "wires": [
            [
                "15ce56cf1449ce52"
            ]
        ]
    },
    {
        "id": "15ce56cf1449ce52",
        "type": "ui_date_picker",
        "z": "b12fd38c090c51f2",
        "g": "b438e0cbd64ef6ce",
        "name": "",
        "label": "Date",
        "group": "8055574ccb17e8ed",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 290,
        "y": 100,
        "wires": [
            [
                "f33b94d2cc59c348"
            ]
        ]
    },
    {
        "id": "f33b94d2cc59c348",
        "type": "function",
        "z": "b12fd38c090c51f2",
        "g": "b438e0cbd64ef6ce",
        "name": "sun positions",
        "func": "/*global suncalc*/\n\nconst msg2 = RED.util.cloneMessage(msg)\nconst msg3 = RED.util.cloneMessage(msg)\nconst latitude = env.get('LATITUDE')\nconst longitude = env.get('LONGITUDE')\nconst date = new Date(msg.payload)\nconst positions = []\nconst altitudes = []\nconst azimuths = []\nconst times = suncalc.getTimes(date, latitude, longitude)\nconst sunrise = times.sunrise.getTime()\nconst sunset = times.sunset.getTime()\nconst zenith = {\n    time: 0,\n    altitude: -(Math.PI / 2),\n    azimuth: 0\n}\n\nfor (let minute = sunrise; minute < sunset; minute += 60000) {\n\n    const position = suncalc.getPosition(new Date(minute), latitude, longitude)\n\n    position.time = minute\n    positions.push(position)\n    altitudes.push({ x: minute, y: position.altitude })\n    azimuths.push({ x: minute, y: position.azimuth })\n\n    if (position.altitude > zenith.altitude) {\n\n        zenith.time = minute\n        zenith.altitude = position.altitude\n        zenith.azimuth = position.azimuth\n\n    }\n}\n\nmsg.payload = [{\n    \"series\": [\"altitude\", \"azimuth\"],\n    \"data\": [\n        altitudes,\n        azimuths\n    ],\n    \"labels\": [\"\"]\n}]\n\nmsg2.payload = zenith\nmsg3.payload = positions\n\nreturn [\n    msg,\n    msg2,\n    msg3\n]",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "suncalc",
                "module": "suncalc"
            }
        ],
        "x": 430,
        "y": 100,
        "wires": [
            [
                "c27168b168847790"
            ],
            [
                "4dd293c16815dce3"
            ],
            [
                "8549e51620377f66"
            ]
        ],
        "outputLabels": [
            "chart",
            "zenith",
            ""
        ]
    },
    {
        "id": "625b9718a13e0340",
        "type": "template",
        "z": "b12fd38c090c51f2",
        "g": "b438e0cbd64ef6ce",
        "name": "html table",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<table width=\"100%\" cellspacing=\"5px\" cellpadding=\"5px\">\n    <caption>zenith</caption>\n    <tr>\n        <th>time</th>\n        <th>altitude</th>\n        <th>azimuth</th>\n    </tr>\n    <tr>\n        <td>{{{payload.time}}}</td>\n        <td>{{{payload.altitude}}}</td>\n        <td>{{{payload.azimuth}}}</td>\n    </tr>\n</table>\n",
        "output": "str",
        "x": 760,
        "y": 100,
        "wires": [
            [
                "f72b11239792afcf"
            ]
        ]
    },
    {
        "id": "f72b11239792afcf",
        "type": "ui_template",
        "z": "b12fd38c090c51f2",
        "g": "b438e0cbd64ef6ce",
        "group": "8055574ccb17e8ed",
        "name": "Zenith",
        "order": 2,
        "width": "6",
        "height": "2",
        "format": "<div ng-bind-html=\"msg.payload\"></div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 890,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "4dd293c16815dce3",
        "type": "function",
        "z": "b12fd38c090c51f2",
        "g": "b438e0cbd64ef6ce",
        "name": "format zenith",
        "func": "/**\n* @param {number} radians\n*/\nfunction truncate(radians) {\n\n    const decimals = 10000000\n    return Math.round(radians * decimals) / decimals\n\n}\n\n// /**\n// * @param {number} radians\n// */\n// function degrees(radians) {\n\n//     return radians * 57.29578\n\n// }\n\nmsg.payload.time = new Date(msg.payload.time).toLocaleTimeString()\nmsg.payload.altitude = truncate(msg.payload.altitude)\nmsg.payload.azimuth = truncate(msg.payload.azimuth)\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 100,
        "wires": [
            [
                "625b9718a13e0340"
            ]
        ]
    },
    {
        "id": "40aa6d57e66c9314",
        "type": "csv",
        "z": "b12fd38c090c51f2",
        "g": "b438e0cbd64ef6ce",
        "name": "",
        "sep": ",",
        "hdrin": "",
        "hdrout": "all",
        "multi": "one",
        "ret": "\\n",
        "temp": "time,altitude,azimuth",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 750,
        "y": 140,
        "wires": [
            [
                "e7bc056a5ca25bc5"
            ]
        ]
    },
    {
        "id": "8549e51620377f66",
        "type": "function",
        "z": "b12fd38c090c51f2",
        "g": "b438e0cbd64ef6ce",
        "name": "format csv",
        "func": "msg.payload.forEach((/** @type {{ time: string | number | Date; }} */ position) => {\n\n    position.time = new Date(position.time).toLocaleTimeString()\n\n})\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 140,
        "wires": [
            [
                "40aa6d57e66c9314"
            ]
        ]
    },
    {
        "id": "be5ed0fec546d004",
        "type": "ui_chart",
        "z": "b12fd38c090c51f2",
        "g": "5cc3007bfef936f5",
        "name": "CPU Temperature",
        "group": "dc6e107af698a0c3",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "Temperature",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm",
        "interpolate": "bezier",
        "nodata": "No temperature reported",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "1000",
        "removeOlderUnit": "86400",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 330,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "08c851f506852280",
        "type": "ui_chart",
        "z": "b12fd38c090c51f2",
        "g": "5cc3007bfef936f5",
        "name": "CPU Volts",
        "group": "cfa1a0f4a477687c",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "Volts",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm",
        "interpolate": "bezier",
        "nodata": "No voltage reported",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "1000",
        "removeOlderUnit": "86400",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 650,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "1c85c492c57041d7",
        "type": "subflow:c4207c9fe61a900e",
        "z": "b12fd38c090c51f2",
        "g": "5cc3007bfef936f5",
        "name": "cpu/+/volts",
        "env": [
            {
                "name": "TOPIC",
                "value": "cpu/+/volts",
                "type": "str"
            },
            {
                "name": "UNIT",
                "value": "V",
                "type": "str"
            }
        ],
        "x": 500,
        "y": 620,
        "wires": [
            [
                "08c851f506852280"
            ]
        ]
    },
    {
        "id": "55425537c5741ec5",
        "type": "subflow:c4207c9fe61a900e",
        "z": "b12fd38c090c51f2",
        "g": "5cc3007bfef936f5",
        "name": "cpu/+/temperature",
        "env": [
            {
                "name": "TOPIC",
                "value": "cpu/+/temperature",
                "type": "str"
            },
            {
                "name": "UNIT",
                "value": "C",
                "type": "str"
            }
        ],
        "x": 130,
        "y": 620,
        "wires": [
            [
                "be5ed0fec546d004"
            ]
        ]
    },
    {
        "id": "3ffae20118b3f324",
        "type": "ui_text",
        "z": "b12fd38c090c51f2",
        "g": "8a81267cb12384d5",
        "group": "25c7f0078ed443dd",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Sunrise",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 360,
        "y": 360,
        "wires": []
    },
    {
        "id": "056b4e63ec2cd405",
        "type": "ui_text",
        "z": "b12fd38c090c51f2",
        "g": "8a81267cb12384d5",
        "group": "25c7f0078ed443dd",
        "order": 8,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Sunset",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 740,
        "y": 360,
        "wires": []
    },
    {
        "id": "64f954fed4bbe73e",
        "type": "ui_text",
        "z": "b12fd38c090c51f2",
        "g": "8a81267cb12384d5",
        "group": "25c7f0078ed443dd",
        "order": 9,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Bedtime",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1160,
        "y": 240,
        "wires": []
    },
    {
        "id": "4332d4706a43e2f6",
        "type": "ui_text",
        "z": "b12fd38c090c51f2",
        "g": "8a81267cb12384d5",
        "group": "25c7f0078ed443dd",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Time",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 330,
        "y": 240,
        "wires": []
    },
    {
        "id": "9e522923ebcadd47",
        "type": "ui_text",
        "z": "b12fd38c090c51f2",
        "g": "8a81267cb12384d5",
        "group": "25c7f0078ed443dd",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Theme",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 340,
        "y": 300,
        "wires": []
    },
    {
        "id": "cd359e0f643d8b52",
        "type": "subflow:be201d7a24b331c5",
        "z": "b12fd38c090c51f2",
        "g": "8a81267cb12384d5",
        "name": "nodered/automation/sunrise",
        "env": [
            {
                "name": "TOPIC",
                "value": "nodered/automation/sunrise",
                "type": "str"
            }
        ],
        "x": 160,
        "y": 360,
        "wires": [
            [
                "3ffae20118b3f324"
            ]
        ]
    },
    {
        "id": "6ce0fae7a630111f",
        "type": "subflow:be201d7a24b331c5",
        "z": "b12fd38c090c51f2",
        "g": "8a81267cb12384d5",
        "name": "nodered/automation/sunset",
        "env": [
            {
                "name": "TOPIC",
                "value": "nodered/automation/sunset",
                "type": "str"
            }
        ],
        "x": 550,
        "y": 360,
        "wires": [
            [
                "056b4e63ec2cd405"
            ]
        ]
    },
    {
        "id": "6fd30861ee594f7a",
        "type": "subflow:be201d7a24b331c5",
        "z": "b12fd38c090c51f2",
        "g": "8a81267cb12384d5",
        "name": "nodered/automation/bedtime",
        "env": [
            {
                "name": "TOPIC",
                "value": "nodered/automation/bedtime",
                "type": "str"
            }
        ],
        "x": 960,
        "y": 240,
        "wires": [
            [
                "64f954fed4bbe73e"
            ]
        ]
    },
    {
        "id": "7b3880a941748a69",
        "type": "mqtt in",
        "z": "b12fd38c090c51f2",
        "g": "8a81267cb12384d5",
        "name": "",
        "topic": "nodered/automation/time",
        "qos": "2",
        "datatype": "utf8",
        "broker": "722d62f3b93039c3",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 150,
        "y": 240,
        "wires": [
            [
                "4332d4706a43e2f6"
            ]
        ]
    },
    {
        "id": "a6c27a31c49422e4",
        "type": "mqtt in",
        "z": "b12fd38c090c51f2",
        "g": "8a81267cb12384d5",
        "name": "",
        "topic": "nodered/automation/theme",
        "qos": "2",
        "datatype": "utf8",
        "broker": "722d62f3b93039c3",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 150,
        "y": 300,
        "wires": [
            [
                "9e522923ebcadd47"
            ]
        ]
    },
    {
        "id": "03b32d05f0dc98c7",
        "type": "subflow:be201d7a24b331c5",
        "z": "b12fd38c090c51f2",
        "g": "8a81267cb12384d5",
        "name": "nodered/automation/midday",
        "env": [
            {
                "name": "TOPIC",
                "value": "nodered/automation/midday",
                "type": "str"
            }
        ],
        "x": 560,
        "y": 240,
        "wires": [
            [
                "b403745b92a95d79"
            ]
        ]
    },
    {
        "id": "3a0d9afd6a91a4b8",
        "type": "subflow:be201d7a24b331c5",
        "z": "b12fd38c090c51f2",
        "g": "8a81267cb12384d5",
        "name": "nodered/automation/afternoon",
        "env": [
            {
                "name": "TOPIC",
                "value": "nodered/automation/afternoon",
                "type": "str"
            }
        ],
        "x": 560,
        "y": 300,
        "wires": [
            [
                "119dc5e83c2a078f"
            ]
        ]
    },
    {
        "id": "119dc5e83c2a078f",
        "type": "ui_text",
        "z": "b12fd38c090c51f2",
        "g": "8a81267cb12384d5",
        "group": "25c7f0078ed443dd",
        "order": 7,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Afternoon",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 760,
        "y": 300,
        "wires": []
    },
    {
        "id": "b403745b92a95d79",
        "type": "ui_text",
        "z": "b12fd38c090c51f2",
        "g": "8a81267cb12384d5",
        "group": "25c7f0078ed443dd",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Midday",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 760,
        "y": 240,
        "wires": []
    },
    {
        "id": "c6ad3ce00565e461",
        "type": "ui_text",
        "z": "b12fd38c090c51f2",
        "g": "8a81267cb12384d5",
        "group": "25c7f0078ed443dd",
        "order": 10,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Altitude",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1160,
        "y": 300,
        "wires": []
    },
    {
        "id": "fb5206dc8bb107e5",
        "type": "ui_text",
        "z": "b12fd38c090c51f2",
        "g": "8a81267cb12384d5",
        "group": "25c7f0078ed443dd",
        "order": 11,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Azimuth",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1160,
        "y": 360,
        "wires": []
    },
    {
        "id": "61c5be84a6996eee",
        "type": "mqtt in",
        "z": "b12fd38c090c51f2",
        "g": "8a81267cb12384d5",
        "name": "",
        "topic": "nodered/automation/altitude",
        "qos": "2",
        "datatype": "json",
        "broker": "722d62f3b93039c3",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 960,
        "y": 300,
        "wires": [
            [
                "c6ad3ce00565e461"
            ]
        ]
    },
    {
        "id": "a921a5a41ab154fc",
        "type": "mqtt in",
        "z": "b12fd38c090c51f2",
        "g": "8a81267cb12384d5",
        "name": "",
        "topic": "nodered/automation/azimuth",
        "qos": "2",
        "datatype": "json",
        "broker": "722d62f3b93039c3",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 960,
        "y": 360,
        "wires": [
            [
                "fb5206dc8bb107e5"
            ]
        ]
    },
    {
        "id": "7afdc0752b7bab93",
        "type": "ui_text",
        "z": "b12fd38c090c51f2",
        "g": "0d4083787ae50482",
        "group": "03b0e40844d33477",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "Chez Nous Main readyState",
        "label": "readyState",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 440,
        "y": 460,
        "wires": []
    },
    {
        "id": "af3bef0be06cad7d",
        "type": "mqtt in",
        "z": "b12fd38c090c51f2",
        "g": "0d4083787ae50482",
        "name": "",
        "topic": "hue/chez-nous-main/status",
        "qos": "2",
        "datatype": "json",
        "broker": "722d62f3b93039c3",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 190,
        "y": 460,
        "wires": [
            [
                "7afdc0752b7bab93"
            ]
        ]
    },
    {
        "id": "e20fca5f4b3d37b9",
        "type": "subflow:9601cbf2386d897b",
        "z": "b12fd38c090c51f2",
        "g": "0d4083787ae50482",
        "name": "Count Chez Nous Main onopen",
        "env": [
            {
                "name": "TOPIC",
                "value": "hue/chez-nous-main/open",
                "type": "str"
            }
        ],
        "x": 170,
        "y": 520,
        "wires": [
            [],
            [
                "dfcbba568eef0b62"
            ]
        ]
    },
    {
        "id": "dfcbba568eef0b62",
        "type": "ui_text",
        "z": "b12fd38c090c51f2",
        "g": "0d4083787ae50482",
        "group": "03b0e40844d33477",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "Chez Nous Main onopen Count",
        "label": "onopen",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 450,
        "y": 520,
        "wires": []
    },
    {
        "id": "23c5c69fbebd0a69",
        "type": "ui_text",
        "z": "b12fd38c090c51f2",
        "g": "c28ed42a351eb1a7",
        "group": "a0da6d89d75fc6ac",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "Basement Hue readyState",
        "label": "readyState",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1020,
        "y": 460,
        "wires": []
    },
    {
        "id": "10298b89f745814f",
        "type": "mqtt in",
        "z": "b12fd38c090c51f2",
        "g": "c28ed42a351eb1a7",
        "name": "",
        "topic": "hue/basement-hue/status",
        "qos": "2",
        "datatype": "json",
        "broker": "722d62f3b93039c3",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 770,
        "y": 460,
        "wires": [
            [
                "23c5c69fbebd0a69"
            ]
        ]
    },
    {
        "id": "82355ffb0dd175e4",
        "type": "subflow:9601cbf2386d897b",
        "z": "b12fd38c090c51f2",
        "g": "c28ed42a351eb1a7",
        "name": "Count Basement Hue onopen",
        "env": [
            {
                "name": "TOPIC",
                "value": "hue/basement-hue/open",
                "type": "str"
            }
        ],
        "x": 780,
        "y": 520,
        "wires": [
            [],
            [
                "e80f7721307a29b3"
            ]
        ]
    },
    {
        "id": "e80f7721307a29b3",
        "type": "ui_text",
        "z": "b12fd38c090c51f2",
        "g": "c28ed42a351eb1a7",
        "group": "a0da6d89d75fc6ac",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "Basement Hue onopen Count",
        "label": "onopen",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1050,
        "y": 520,
        "wires": []
    },
    {
        "id": "8fe5e01fe99f5026",
        "type": "inject",
        "z": "b12fd38c090c51f2",
        "g": "b438e0cbd64ef6ce",
        "name": "every morning",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "00 04 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 120,
        "wires": [
            [
                "15ce56cf1449ce52"
            ]
        ]
    },
    {
        "id": "e7bc056a5ca25bc5",
        "type": "change",
        "z": "b12fd38c090c51f2",
        "g": "b438e0cbd64ef6ce",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "sun-positions",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 930,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "92446033e6f8968f",
        "type": "ui_chart",
        "z": "b12fd38c090c51f2",
        "g": "5cc3007bfef936f5",
        "name": "loadavg",
        "group": "a6c038e4cae31f08",
        "order": 0,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm",
        "interpolate": "bezier",
        "nodata": "No values reported",
        "dot": false,
        "ymin": "0",
        "ymax": "100",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 440,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "9632e610560cfce1",
        "type": "ui_chart",
        "z": "b12fd38c090c51f2",
        "g": "5cc3007bfef936f5",
        "name": "freemem",
        "group": "66adb26e37268f4a",
        "order": 0,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm",
        "interpolate": "bezier",
        "nodata": "No values reported",
        "dot": false,
        "ymin": "0",
        "ymax": "4",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 920,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "dea1d159dc5339ef",
        "type": "change",
        "z": "b12fd38c090c51f2",
        "g": "5cc3007bfef936f5",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload / 1073741824",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 760,
        "y": 680,
        "wires": [
            [
                "9632e610560cfce1"
            ]
        ]
    },
    {
        "id": "6eae3f85a3c030a8",
        "type": "subflow:c4207c9fe61a900e",
        "z": "b12fd38c090c51f2",
        "g": "5cc3007bfef936f5",
        "name": "os/+/freemem",
        "env": [
            {
                "name": "TOPIC",
                "value": "os/+/freemem",
                "type": "str"
            }
        ],
        "x": 590,
        "y": 680,
        "wires": [
            [
                "dea1d159dc5339ef"
            ]
        ]
    },
    {
        "id": "281d03f937caa527",
        "type": "subflow:c4207c9fe61a900e",
        "z": "b12fd38c090c51f2",
        "g": "5cc3007bfef936f5",
        "name": "os/+/loadavg",
        "env": [
            {
                "name": "TOPIC",
                "value": "os/+/loadavg",
                "type": "str"
            }
        ],
        "x": 110,
        "y": 680,
        "wires": [
            [
                "e08653b0e7646390"
            ]
        ]
    },
    {
        "id": "e08653b0e7646390",
        "type": "change",
        "z": "b12fd38c090c51f2",
        "g": "5cc3007bfef936f5",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "$round(payload * 100)",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 280,
        "y": 680,
        "wires": [
            [
                "92446033e6f8968f"
            ]
        ]
    },
    {
        "id": "d6d20cb20e9e643b",
        "type": "websocket in",
        "z": "997764cb1253a223",
        "g": "8fc06747717d00eb",
        "name": "",
        "server": "025512d801f893c2",
        "client": "",
        "x": 170,
        "y": 260,
        "wires": [
            [
                "3dd30f8784d759bb"
            ]
        ]
    },
    {
        "id": "9ebfab406a5ca7c4",
        "type": "websocket out",
        "z": "997764cb1253a223",
        "g": "6a70472869a0916a",
        "name": "",
        "server": "3c53975cbddbb628",
        "client": "",
        "x": 620,
        "y": 100,
        "wires": []
    },
    {
        "id": "06c6c945e8d5887f",
        "type": "link in",
        "z": "997764cb1253a223",
        "g": "6a70472869a0916a",
        "name": "send update",
        "links": [
            "06533547fdbaa357"
        ],
        "x": 335,
        "y": 100,
        "wires": [
            [
                "b2ebd790a5119ac7"
            ]
        ]
    },
    {
        "id": "b2ebd790a5119ac7",
        "type": "delay",
        "z": "997764cb1253a223",
        "g": "6a70472869a0916a",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "3",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 450,
        "y": 100,
        "wires": [
            [
                "9ebfab406a5ca7c4"
            ]
        ]
    },
    {
        "id": "3dd30f8784d759bb",
        "type": "link out",
        "z": "997764cb1253a223",
        "g": "8fc06747717d00eb",
        "name": "process command",
        "mode": "link",
        "links": [
            "905f3f5d5a95a0cf",
            "12eb9a8162f223d1"
        ],
        "x": 295,
        "y": 260,
        "wires": []
    },
    {
        "id": "40f2f41eed2f5540",
        "type": "inject",
        "z": "997764cb1253a223",
        "g": "cc17bdf0cffdd1a1",
        "name": "send update",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "timestamp",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 100,
        "wires": [
            [
                "06533547fdbaa357"
            ]
        ]
    },
    {
        "id": "06533547fdbaa357",
        "type": "link out",
        "z": "997764cb1253a223",
        "g": "cc17bdf0cffdd1a1",
        "name": "send update",
        "mode": "link",
        "links": [
            "06c6c945e8d5887f"
        ],
        "x": 255,
        "y": 100,
        "wires": []
    },
    {
        "id": "e2d9ed9e8373cc0d",
        "type": "websocket in",
        "z": "997764cb1253a223",
        "g": "e7f5a72a22121c8f",
        "name": "",
        "server": "ecb690d3c11259df",
        "client": "",
        "x": 170,
        "y": 580,
        "wires": [
            [
                "67ab43420a885103"
            ]
        ]
    },
    {
        "id": "65391bdd2e45d311",
        "type": "websocket out",
        "z": "997764cb1253a223",
        "g": "e7f5a72a22121c8f",
        "name": "",
        "server": "ecb690d3c11259df",
        "client": "",
        "x": 590,
        "y": 580,
        "wires": []
    },
    {
        "id": "67ab43420a885103",
        "type": "change",
        "z": "997764cb1253a223",
        "g": "e7f5a72a22121c8f",
        "name": "",
        "rules": [
            {
                "t": "delete",
                "p": "_session",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 380,
        "y": 580,
        "wires": [
            [
                "65391bdd2e45d311"
            ]
        ]
    },
    {
        "id": "0fa7147e765e3a0a",
        "type": "link in",
        "z": "997764cb1253a223",
        "g": "f62fd902bca5d337",
        "name": "send response",
        "links": [
            "d26af90c07042d0b"
        ],
        "x": 855,
        "y": 420,
        "wires": [
            [
                "ca533975bad3a01a"
            ]
        ]
    },
    {
        "id": "ca533975bad3a01a",
        "type": "delay",
        "z": "997764cb1253a223",
        "g": "f62fd902bca5d337",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "3",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 970,
        "y": 420,
        "wires": [
            [
                "1cb6cc25224307af"
            ]
        ]
    },
    {
        "id": "1cb6cc25224307af",
        "type": "websocket out",
        "z": "997764cb1253a223",
        "g": "f62fd902bca5d337",
        "name": "",
        "server": "83dce741285f9890",
        "client": "",
        "x": 1140,
        "y": 420,
        "wires": []
    },
    {
        "id": "60c093dadbe98d8c",
        "type": "link in",
        "z": "997764cb1253a223",
        "g": "3792bffcc53d7d09",
        "name": "process request",
        "links": [
            "615ec4f521b2c7bf"
        ],
        "x": 375,
        "y": 420,
        "wires": [
            [
                "e967994a8d994435"
            ]
        ]
    },
    {
        "id": "d26af90c07042d0b",
        "type": "link out",
        "z": "997764cb1253a223",
        "g": "3792bffcc53d7d09",
        "name": "send response",
        "mode": "link",
        "links": [
            "0fa7147e765e3a0a"
        ],
        "x": 775,
        "y": 420,
        "wires": []
    },
    {
        "id": "83c531568daee540",
        "type": "websocket in",
        "z": "997764cb1253a223",
        "g": "6cf254b5fbe8d9c1",
        "name": "",
        "server": "83dce741285f9890",
        "client": "",
        "x": 160,
        "y": 420,
        "wires": [
            [
                "615ec4f521b2c7bf"
            ]
        ]
    },
    {
        "id": "615ec4f521b2c7bf",
        "type": "link out",
        "z": "997764cb1253a223",
        "g": "6cf254b5fbe8d9c1",
        "name": "process request",
        "mode": "link",
        "links": [
            "60c093dadbe98d8c"
        ],
        "x": 275,
        "y": 420,
        "wires": []
    },
    {
        "id": "12eb9a8162f223d1",
        "type": "link in",
        "z": "997764cb1253a223",
        "g": "43456594e4cb4e24",
        "name": "process command",
        "links": [
            "3dd30f8784d759bb"
        ],
        "x": 395,
        "y": 260,
        "wires": [
            [
                "445d81f63806df12"
            ]
        ]
    },
    {
        "id": "445d81f63806df12",
        "type": "debug",
        "z": "997764cb1253a223",
        "g": "43456594e4cb4e24",
        "name": "command",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 500,
        "y": 260,
        "wires": []
    },
    {
        "id": "b34ce1d598cf8eb8",
        "type": "change",
        "z": "997764cb1253a223",
        "g": "3792bffcc53d7d09",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"request\":payload,\"response\":true}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 660,
        "y": 420,
        "wires": [
            [
                "d26af90c07042d0b"
            ]
        ]
    },
    {
        "id": "e967994a8d994435",
        "type": "delay",
        "z": "997764cb1253a223",
        "g": "3792bffcc53d7d09",
        "name": "",
        "pauseType": "delay",
        "timeout": "500",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 490,
        "y": 420,
        "wires": [
            [
                "b34ce1d598cf8eb8"
            ]
        ]
    },
    {
        "id": "c19f87c7eda22e58",
        "type": "link in",
        "z": "984bed4cccaab194",
        "g": "e9efa51261f6c783",
        "name": "chez nous main metadata",
        "links": [
            "66730b89492663ed"
        ],
        "x": 135,
        "y": 120,
        "wires": [
            [
                "f6f8f4d6fd5dc7d0"
            ]
        ]
    },
    {
        "id": "f6f8f4d6fd5dc7d0",
        "type": "subflow:648d285142674988",
        "z": "984bed4cccaab194",
        "g": "e9efa51261f6c783",
        "name": "Chez Nous Main Options",
        "x": 290,
        "y": 120,
        "wires": [
            [
                "b5de3d2c560c6789"
            ]
        ]
    },
    {
        "id": "b5de3d2c560c6789",
        "type": "switch",
        "z": "984bed4cccaab194",
        "g": "e9efa51261f6c783",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "grouped_light",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "scene",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 470,
        "y": 120,
        "wires": [
            [
                "18f71e5b40208e53"
            ],
            [
                "92eaf49576e50a9e"
            ]
        ]
    },
    {
        "id": "18f71e5b40208e53",
        "type": "ui_dropdown",
        "z": "984bed4cccaab194",
        "g": "e9efa51261f6c783",
        "name": "Chez Nous Main Group Off",
        "label": "Off",
        "tooltip": "",
        "place": "Select room...",
        "group": "21f11f110d626f5a",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 700,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "a6a45d59c3f60b7d",
        "type": "ui_dropdown",
        "z": "984bed4cccaab194",
        "g": "e9efa51261f6c783",
        "name": "Main Floor Scene",
        "label": "Main Floor",
        "tooltip": "",
        "place": "Select scene...",
        "group": "21f11f110d626f5a",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 810,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "d95133804941b353",
        "type": "ui_dropdown",
        "z": "984bed4cccaab194",
        "g": "e9efa51261f6c783",
        "name": "Yard Scene",
        "label": "Yard",
        "tooltip": "",
        "place": "Select scene...",
        "group": "21f11f110d626f5a",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 790,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "92eaf49576e50a9e",
        "type": "switch",
        "z": "984bed4cccaab194",
        "g": "e9efa51261f6c783",
        "name": "",
        "property": "group",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Yard",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Main Floor",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Main Bathroom",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 4,
        "x": 630,
        "y": 180,
        "wires": [
            [
                "d95133804941b353"
            ],
            [
                "a6a45d59c3f60b7d"
            ],
            [
                "683b5511f00d57d4"
            ],
            [
                "49b75a6fde0b6301"
            ]
        ]
    },
    {
        "id": "49b75a6fde0b6301",
        "type": "debug",
        "z": "984bed4cccaab194",
        "g": "e9efa51261f6c783",
        "name": "chez nous main metadata",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 830,
        "y": 240,
        "wires": []
    },
    {
        "id": "7ba4579b7673a491",
        "type": "ui_button",
        "z": "984bed4cccaab194",
        "g": "1a405db7c77801ee",
        "name": "Open Living Room Shades",
        "group": "d0b96e9f8503bef3",
        "order": 0,
        "width": "3",
        "height": "1",
        "passthru": false,
        "label": "Open",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "11037",
        "payloadType": "num",
        "topic": "topic",
        "topicType": "msg",
        "x": 240,
        "y": 340,
        "wires": [
            [
                "9f3d946a03de6aa8"
            ]
        ]
    },
    {
        "id": "9f3d946a03de6aa8",
        "type": "link out",
        "z": "984bed4cccaab194",
        "g": "1a405db7c77801ee",
        "name": "open living room shades",
        "mode": "link",
        "links": [
            "7173aa38c9fa93dc"
        ],
        "x": 395,
        "y": 340,
        "wires": []
    },
    {
        "id": "ad9d1d2d1597d2ba",
        "type": "ui_button",
        "z": "984bed4cccaab194",
        "g": "1a405db7c77801ee",
        "name": "Close Living Room Shades",
        "group": "d0b96e9f8503bef3",
        "order": 0,
        "width": "3",
        "height": "1",
        "passthru": false,
        "label": "Close",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "40564",
        "payloadType": "num",
        "topic": "topic",
        "topicType": "msg",
        "x": 240,
        "y": 400,
        "wires": [
            [
                "676c095bc7abab1e"
            ]
        ]
    },
    {
        "id": "676c095bc7abab1e",
        "type": "link out",
        "z": "984bed4cccaab194",
        "g": "1a405db7c77801ee",
        "name": "open living room shades",
        "mode": "link",
        "links": [
            "7173aa38c9fa93dc"
        ],
        "x": 395,
        "y": 400,
        "wires": []
    },
    {
        "id": "356766b9c684121f",
        "type": "ui_button",
        "z": "984bed4cccaab194",
        "g": "1a405db7c77801ee",
        "name": "Open Dining Room Shades",
        "group": "a81011918a2f3acc",
        "order": 0,
        "width": "3",
        "height": "1",
        "passthru": false,
        "label": "Open",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "23259",
        "payloadType": "num",
        "topic": "topic",
        "topicType": "msg",
        "x": 240,
        "y": 460,
        "wires": [
            [
                "92a8459af7433d08"
            ]
        ]
    },
    {
        "id": "92a8459af7433d08",
        "type": "link out",
        "z": "984bed4cccaab194",
        "g": "1a405db7c77801ee",
        "name": "open living room shades",
        "mode": "link",
        "links": [
            "7173aa38c9fa93dc"
        ],
        "x": 395,
        "y": 460,
        "wires": []
    },
    {
        "id": "d0f7e42d37e33bcb",
        "type": "ui_button",
        "z": "984bed4cccaab194",
        "g": "1a405db7c77801ee",
        "name": "Close Dining Room Shades",
        "group": "a81011918a2f3acc",
        "order": 0,
        "width": "3",
        "height": "1",
        "passthru": false,
        "label": "Close",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "41405",
        "payloadType": "num",
        "topic": "topic",
        "topicType": "msg",
        "x": 240,
        "y": 520,
        "wires": [
            [
                "d6caf0385ddcc934"
            ]
        ]
    },
    {
        "id": "d6caf0385ddcc934",
        "type": "link out",
        "z": "984bed4cccaab194",
        "g": "1a405db7c77801ee",
        "name": "open living room shades",
        "mode": "link",
        "links": [
            "7173aa38c9fa93dc"
        ],
        "x": 395,
        "y": 520,
        "wires": []
    },
    {
        "id": "683b5511f00d57d4",
        "type": "ui_dropdown",
        "z": "984bed4cccaab194",
        "g": "e9efa51261f6c783",
        "name": "Main Bathroom Scene",
        "label": "Bathroom",
        "tooltip": "",
        "place": "Select scene...",
        "group": "21f11f110d626f5a",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 820,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "2de7d056579133dc",
        "type": "debug",
        "z": "1e9ddfd50242cb2a",
        "g": "f9e70c058a8efc82",
        "name": "basement hue metadata",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 850,
        "y": 240,
        "wires": []
    },
    {
        "id": "09ca011e26f258fb",
        "type": "link in",
        "z": "1e9ddfd50242cb2a",
        "g": "f9e70c058a8efc82",
        "name": "basement hue metadata",
        "links": [
            "65911d8f953e99bf"
        ],
        "x": 135,
        "y": 120,
        "wires": [
            [
                "4fa7f069cac5ac37"
            ]
        ]
    },
    {
        "id": "4fa7f069cac5ac37",
        "type": "subflow:648d285142674988",
        "z": "1e9ddfd50242cb2a",
        "g": "f9e70c058a8efc82",
        "name": "Basement Hue Options",
        "x": 290,
        "y": 120,
        "wires": [
            [
                "9b80a58f06cf0767"
            ]
        ]
    },
    {
        "id": "9b80a58f06cf0767",
        "type": "switch",
        "z": "1e9ddfd50242cb2a",
        "g": "f9e70c058a8efc82",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "grouped_light",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "scene",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 470,
        "y": 120,
        "wires": [
            [
                "caafe6f46e7bfe15"
            ],
            [
                "c68cc429b9315c66"
            ]
        ]
    },
    {
        "id": "caafe6f46e7bfe15",
        "type": "ui_dropdown",
        "z": "1e9ddfd50242cb2a",
        "g": "f9e70c058a8efc82",
        "name": "Basement Hue Group Off",
        "label": "Off",
        "tooltip": "",
        "place": "Select group...",
        "group": "b092a43dac832410",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 690,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "c68cc429b9315c66",
        "type": "switch",
        "z": "1e9ddfd50242cb2a",
        "g": "f9e70c058a8efc82",
        "name": "",
        "property": "group",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Basement",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Basement Bathroom",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 3,
        "x": 630,
        "y": 180,
        "wires": [
            [
                "962396c085fff789"
            ],
            [
                "7ebfddb7b94e3eea"
            ],
            [
                "2de7d056579133dc"
            ]
        ]
    },
    {
        "id": "962396c085fff789",
        "type": "ui_dropdown",
        "z": "1e9ddfd50242cb2a",
        "g": "f9e70c058a8efc82",
        "name": "Basement Scene",
        "label": "Basement",
        "tooltip": "",
        "place": "Select scene...",
        "group": "b092a43dac832410",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 830,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "7ebfddb7b94e3eea",
        "type": "ui_dropdown",
        "z": "1e9ddfd50242cb2a",
        "g": "f9e70c058a8efc82",
        "name": "Basement Bathroom Scene",
        "label": "Bathroom",
        "tooltip": "",
        "place": "Select scene...",
        "group": "b092a43dac832410",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 860,
        "y": 180,
        "wires": [
            []
        ]
    }
]